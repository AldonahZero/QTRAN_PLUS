version: '3.8'

services:
  mariadb:
    image: mariadb:11.5.2
    container_name: mariadb_QTRAN
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    ports:
      - "9901:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - db_network

  mysql:
    image: mysql:8.0.39
    container_name: mysql_QTRAN
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    ports:
      - "13306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - db_network

  clickhouse:
    image: clickhouse/clickhouse-server:24.9.2.42
    container_name: clickhouse_QTRAN
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - db_network

  monetdb:
    image: monetdb/monetdb-r-docker
    container_name: monetdb_QTRAN
    ports:
      - "50000:50000"
    volumes:
      - monetdb_data:/var/lib/monetdb
    networks:
      - db_network

  postgres:
    image: postgres:16.3
    container_name: postgres_QTRAN
    environment:
      POSTGRES_PASSWORD: "123456"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db_network

  mongodb:
    image: mongo:7.0
    container_name: mongodb_QTRAN
    # 与 database_connector_args.json 保持一致：无认证、默认端口
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - db_network

  redis:
    image: redis:7.2
    container_name: redis_QTRAN
    # 与 database_connector_args.json 保持一致：无密码、默认端口
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - db_network

  memcached:
    image: memcached:1.6-alpine
    container_name: memcached_QTRAN
    ports:
      - "11211:11211"
    networks:
      - db_network

  etcd:
    image: quay.io/coreos/etcd:v3.5.14
    container_name: etcd_QTRAN
    command: ["etcd", "--advertise-client-urls", "http://0.0.0.0:2379", "--listen-client-urls", "http://0.0.0.0:2379"]
    ports:
      - "12379:2379"  # 外部映射端口与 database_connector_args.json 对应
    networks:
      - db_network

  consul:
    image: hashicorp/consul:1.19
    container_name: consul_QTRAN
    command: ["agent", "-dev", "-client=0.0.0.0"]
    ports:
      - "18500:8500"   # HTTP API / UI
      - "18600:8600/udp"  # DNS 端口
    networks:
      - db_network
  
  tdsql:
    image: pingcap/tidb:7.5.0
    container_name: tdsql_QTRAN
    # Placeholder: using TiDB image as a MySQL-protocol-compatible example for TDSQL.
    # Replace image and environment with the official TDSQL image/credentials if available.
    environment:
      - TZ=UTC
    ports:
      - "4000:4000"  # TiDB server port (MySQL protocol)
    volumes:
      - tdsql_data:/var/lib/tdsql
    networks:
      - db_network

networks:
  db_network:
    driver: bridge

volumes:
  mariadb_data:
  mysql_data:
  clickhouse_data:
  monetdb_data:
  postgres_data:
  mongodb_data:
  redis_data:
  memcached_data:
  etcd_data:
  consul_data:
  tdsql_data:
