{
  "summary": {
    "true_db_bugs_count": 61,
    "translation_issues_count": 28
  },
  "true_db_bugs": [
    {
      "index": 2002,
      "sql": "SELECT * FROM test WHERE (c0 LIKE '+/'); -- fetches no row",
      "orig_result": "[('+/',)]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "In DuckDB, the LIKE operator can only be used with string types, while c0 is of type DOUBLE. To resolve the error, I modified the SQL statement by casting c0 to VARCHAR, allowing the LIKE operation to"
    },
    {
      "index": 2006,
      "sql": "SELECT * FROM t0 WHERE t0.c0 LIKE './'; -- fetches no rows",
      "orig_result": "[('./',)]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The error message indicates that the LIKE operator in DuckDB requires both operands to be of the same type, specifically VARCHAR. Since 'c0' is defined as an INTEGER, I have added a CAST function to c"
    },
    {
      "index": 2008,
      "sql": "SELECT * FROM t0 WHERE t0.c0 IS NOT 1; -- returns no row",
      "orig_result": "[(None,)]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "In transferring the SQL statement 'SELECT * FROM t0 WHERE t0.c0 IS NOT 1;' from SQLite to DuckDB, the condition 'IS NOT 1' was modified to '<> 1' to align with standard SQL syntax. Both SQLite and Duc"
    },
    {
      "index": 2010,
      "sql": "SELECT * FROM t0, t1 WHERE (t1.c1 >= CAST(8366271098608253588 AS REAL) AND t1.c1 <= CAST(8366271098608253588 AS REAL)); -- fetches row",
      "orig_result": "[('a', 8.366271098608254e+18)]",
      "transfer_result": "[('a', 8.366271098608254e+18)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT * FROM t0, t1 WHERE (t1.c1 >= CAST(8366271098608253588 AS REAL) AND t1.c1 <= CAST(8366271098608253588 AS REAL));' has been translated to DuckDB syntax while maint"
    },
    {
      "index": 2014,
      "sql": "SELECT CAST(c0 AS NUMERIC) FROM t0; -- expected: 1, actual: 1.0",
      "orig_result": "[(1,)]",
      "transfer_result": "[(1.0,)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT CAST(c0 AS NUMERIC) FROM t0' was translated to DuckDB by changing 'NUMERIC' to 'DOUBLE'. In DuckDB, 'DOUBLE' is used to represent floating-point numbers, which al"
    },
    {
      "index": 2015,
      "sql": "SELECT * FROM t0 WHERE t0.c0 LIKE ' 1-'; -- expected: ' 1-', actual: no row is fetched",
      "orig_result": "[(' 1-',)]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "In DuckDB, the LIKE operator requires both sides to be of compatible types. Since c0 is defined as an INTEGER, I used CAST to convert it to VARCHAR to allow the comparison with the string ' 1-'. This "
    },
    {
      "index": 2016,
      "sql": "SELECT * FROM t0 WHERE CAST(t0.c0 AS TEXT) = 'A'; -- expected: no row is fetched, actual: a",
      "orig_result": "[('a',)]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "In this case, the SELECT statement from SQLite can be directly translated to DuckDB with minimal changes. The CAST function is supported in both databases, and while SQLite uses TEXT, DuckDB uses VARC"
    },
    {
      "index": 2017,
      "sql": "SELECT * FROM t0 WHERE t0.c0 LIKE '.1%'; -- expected: '.1%', actual: no row is fetched",
      "orig_result": "[('.1%',)]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "In DuckDB, the LIKE operator requires the operands to be of compatible types. Since c0 is defined as an INTEGER in the previous table creation statement, I used CAST(t0.c0 AS VARCHAR) to convert the i"
    },
    {
      "index": 2018,
      "sql": "SELECT * FROM t0 WHERE (t0.c3 COLLATE NOCASE) BETWEEN 1 AND '5'; -- expected: no row is fetched, actual: row is fetched",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement 'SELECT * FROM t0 WHERE (t0.c3) BETWEEN 1 AND '5'' resulted in a Binder Error due to mixing types (INTEGER and VARCHAR) in the BETWEEN clause. To resolve this, I modified th"
    },
    {
      "index": 2019,
      "sql": "SELECT * FROM t0 WHERE NOT(t0.c0 <=> 2035382037); -- expected: row is fetched, actual: no row is fetched",
      "orig_result": "[(None,)]",
      "transfer_result": "[(None,)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE NOT(t0.c0 <=> 2035382037);' is directly transferable to MariaDB without any modifications. The column name 'c0' and the value '2035382037' remain u"
    },
    {
      "index": 2021,
      "sql": "SELECT * FROM t0 WHERE IF(FALSE, t0.c0, 0.1); -- expected: row is fetched, actual: row is not fetched",
      "orig_result": "[(1,)]",
      "transfer_result": "[(1,)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE IF(FALSE, t0.c0, 0.1);' was transferred to MariaDB by replacing the IF statement with a condition that evaluates to false, which is 'NOT(t0.c0 <=> "
    },
    {
      "index": 2023,
      "sql": "select * from information_schema.TABLES; -- unexpected (when executed with multiple threads): Duplicate entry 'triggerbug21-t0' for key 'PRIMARY'",
      "orig_result": "[('def', 'mysql', 'innodb_table_stats', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 2, 8192, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 10, 29, 8, 39, 1), None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', ''), ('def', 'mysql', 'innodb_index_stats', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 6, 2730, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 10, 29, 8, 39, 1), None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', ''), ('def', 'information_schema', 'CHARACTER_SETS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'CHECK_CONSTRAINTS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'COLLATIONS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'COLUMNS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'COLUMNS_EXTENSIONS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'COLUMN_STATISTICS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'EVENTS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'FILES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_DATAFILES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_FOREIGN', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_FOREIGN_COLS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_FIELDS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_TABLESPACES_BRIEF', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'KEY_COLUMN_USAGE', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'KEYWORDS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'PARAMETERS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'PARTITIONS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'RESOURCE_GROUPS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'ROUTINES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'SCHEMATA', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'SCHEMATA_EXTENSIONS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'ST_SPATIAL_REFERENCE_SYSTEMS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'ST_UNITS_OF_MEASURE', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'ST_GEOMETRY_COLUMNS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'STATISTICS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'TABLE_CONSTRAINTS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'TABLE_CONSTRAINTS_EXTENSIONS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'TABLES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'TABLES_EXTENSIONS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'TABLESPACES_EXTENSIONS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'TRIGGERS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'VIEW_ROUTINE_USAGE', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'VIEW_TABLE_USAGE', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'VIEWS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'COLUMN_PRIVILEGES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'ENGINES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'OPTIMIZER_TRACE', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'PLUGINS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'PROCESSLIST', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'PROFILING', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'SCHEMA_PRIVILEGES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'TABLESPACES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'TABLE_PRIVILEGES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'information_schema', 'USER_PRIVILEGES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, None, None, '', ''), ('def', 'performance_schema', 'cond_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'error_log', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 11, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_waits_current', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1536, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_waits_history', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 2560, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_waits_history_long', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 10000, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_waits_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 83712, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_waits_summary_by_instance', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 10752, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_waits_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 167424, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_waits_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 83712, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_waits_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 83712, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_waits_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 654, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'file_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 4096, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'file_summary_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 80, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'file_summary_by_instance', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 4096, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'host_cache', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 279, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'mutex_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 4096, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'objects_summary_global_by_type', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 4096, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'performance_timers', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 5, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'processlist', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'rwlock_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 2048, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'setup_actors', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 128, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'setup_consumers', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 16, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'setup_instruments', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1500, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'setup_objects', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 128, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'setup_threads', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 100, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'table_io_waits_summary_by_index_usage', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 8192, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'table_io_waits_summary_by_table', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 4096, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'table_lock_waits_summary_by_table', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 4096, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'threads', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_stages_current', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_stages_history', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 2560, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_stages_history_long', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 10000, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_stages_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 44800, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_stages_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 22400, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_stages_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 22400, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_stages_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 22400, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_stages_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 175, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_current', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 2560, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_history', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 2560, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_history_long', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 10000, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 56064, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 28032, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 28032, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 28032, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 219, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_summary_by_digest', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 10000, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_summary_by_program', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_histogram_global', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 450, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_statements_histogram_by_digest', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 10000, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_transactions_current', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_transactions_history', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 2560, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_transactions_history_long', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 10000, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_transactions_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_transactions_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 128, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_transactions_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 128, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_transactions_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 128, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_transactions_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_errors_summary_by_user_by_error', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 209920, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_errors_summary_by_host_by_error', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 209920, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_errors_summary_by_account_by_error', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 209920, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_errors_summary_by_thread_by_error', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 419840, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'events_errors_summary_global_by_error', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 5314, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'users', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 128, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'accounts', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 128, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'hosts', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 128, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'socket_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'socket_summary_by_instance', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'socket_summary_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 10, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'session_connect_attrs', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 131072, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_bin', None, '', ''), ('def', 'performance_schema', 'session_account_connect_attrs', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 131072, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_bin', None, '', ''), ('def', 'performance_schema', 'keyring_keys', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 96, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_bin', None, '', ''), ('def', 'performance_schema', 'memory_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 450, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'memory_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 57600, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'memory_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 57600, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'memory_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 115200, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'memory_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 57600, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'table_handles', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1024, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'metadata_locks', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1024, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'data_locks', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 99999, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'data_lock_waits', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 99999, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_connection_configuration', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_group_members', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_connection_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_applier_configuration', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_applier_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_applier_status_by_coordinator', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 256, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_applier_status_by_worker', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 8192, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_group_member_stats', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_applier_filters', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_applier_global_filters', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_asynchronous_connection_failover', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'replication_asynchronous_connection_failover_managed', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'log_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'prepared_statements_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'user_variables_by_thread', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 2560, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'status_by_account', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 33024, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'status_by_host', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 33024, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'status_by_thread', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 66048, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'status_by_user', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 33024, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'global_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 258, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'session_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 258, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'variables_by_thread', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 172288, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'global_variables', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 673, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'session_variables', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 673, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'variables_info', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 673, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'persisted_variables', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'user_defined_functions', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 16, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'binary_log_transaction_compression_stats', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'tls_channel_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 96, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'performance_schema', 'keyring_component_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 64, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 20), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'mysql', 'db', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 2, 8192, 16384, 0, 16384, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'Database privileges'), ('def', 'mysql', 'user', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 5, 3276, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'Users and global privileges'), ('def', 'mysql', 'default_roles', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'Default roles'), ('def', 'mysql', 'role_edges', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'Role hierarchy and role grants'), ('def', 'mysql', 'global_grants', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 94, 697, 65536, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'Extended global grants'), ('def', 'mysql', 'password_history', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'Password history for user accounts'), ('def', 'mysql', 'func', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'User defined functions'), ('def', 'mysql', 'plugin', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'MySQL plugins'), ('def', 'mysql', 'help_topic', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 446, 3563, 1589248, 0, 98304, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'help topics'), ('def', 'mysql', 'help_category', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 53, 309, 16384, 0, 16384, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'help categories'), ('def', 'mysql', 'help_relation', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 1298, 75, 98304, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'keyword-topic relation'), ('def', 'mysql', 'servers', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'MySQL Foreign Servers table'), ('def', 'mysql', 'tables_priv', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 2, 8192, 16384, 0, 16384, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'Table privileges'), ('def', 'mysql', 'columns_priv', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'Column privileges'), ('def', 'mysql', 'help_keyword', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 889, 147, 131072, 0, 131072, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'help keywords'), ('def', 'mysql', 'time_zone_name', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 1891, 129, 245760, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'Time zone names'), ('def', 'mysql', 'time_zone', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 1831, 44, 81920, 0, 0, 4194304, 1793, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'Time zones'), ('def', 'mysql', 'time_zone_transition', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 116428, 40, 4734976, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'Time zone transitions'), ('def', 'mysql', 'time_zone_transition_type', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 10529, 45, 475136, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'Time zone transition types'), ('def', 'mysql', 'time_zone_leap_second', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'Leap seconds information for time zones'), ('def', 'mysql', 'procs_priv', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 16384, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'Procedure privileges'), ('def', 'mysql', 'general_log', 'BASE TABLE', 'CSV', 10, 'Dynamic', 2, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, '', 'General log'), ('def', 'mysql', 'slow_log', 'BASE TABLE', 'CSV', 10, 'Dynamic', 2, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, '', 'Slow log'), ('def', 'mysql', 'component', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, 1, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC', 'Components'), ('def', 'mysql', 'slave_relay_log_info', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'Relay Log Information'), ('def', 'mysql', 'slave_master_info', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'Master Information'), ('def', 'mysql', 'slave_worker_info', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'Worker Information'), ('def', 'mysql', 'gtid_executed', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb4_0900_ai_ci', None, 'row_format=DYNAMIC stats_persistent=0', ''), ('def', 'mysql', 'replication_asynchronous_connection_failover', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 16384, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'The source configuration details'), ('def', 'mysql', 'replication_asynchronous_connection_failover_managed', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'The managed source configuration details'), ('def', 'mysql', 'replication_group_member_actions', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 2, 8192, 16384, 0, 16384, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb4_0900_ai_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'The member actions configuration.'), ('def', 'mysql', 'replication_group_configuration_version', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 1, 16384, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb4_0900_ai_ci', None, 'row_format=DYNAMIC stats_persistent=0', 'The group configuration version.'), ('def', 'mysql', 'server_cost', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 6, 2730, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', ''), ('def', 'mysql', 'engine_cost', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 2, 8192, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_general_ci', None, 'row_format=DYNAMIC stats_persistent=0', ''), ('def', 'mysql', 'proxies_priv', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 1, 16384, 16384, 0, 16384, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'utf8mb3_bin', None, 'row_format=DYNAMIC stats_persistent=0', 'User proxy privileges'), ('def', 'mysql', 'ndb_binlog_index', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 4194304, None, datetime.datetime(2025, 9, 16, 5, 37, 22), None, None, 'latin1_swedish_ci', None, 'row_format=DYNAMIC stats_persistent=0', ''), ('def', 'sys', 'version', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'sys_config', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 6, 2730, 16384, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'sys', 'innodb_buffer_stats_by_schema', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$innodb_buffer_stats_by_schema', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'innodb_buffer_stats_by_table', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$innodb_buffer_stats_by_table', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'schema_object_overview', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'schema_auto_increment_columns', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$schema_flattened_keys', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'schema_redundant_indexes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'ps_check_lost_instrumentation', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'latest_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$latest_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'io_by_thread_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$io_by_thread_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'io_global_by_file_by_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$io_global_by_file_by_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'io_global_by_file_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$io_global_by_file_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'io_global_by_wait_by_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$io_global_by_wait_by_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'io_global_by_wait_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$io_global_by_wait_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'innodb_lock_waits', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$innodb_lock_waits', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'memory_by_user_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$memory_by_user_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'memory_by_host_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$memory_by_host_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'memory_by_thread_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$memory_by_thread_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'memory_global_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$memory_global_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'memory_global_total', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$memory_global_total', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'schema_index_statistics', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$schema_index_statistics', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$ps_schema_table_statistics_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'schema_table_statistics', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$schema_table_statistics', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'schema_table_statistics_with_buffer', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$schema_table_statistics_with_buffer', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'schema_tables_with_full_table_scans', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$schema_tables_with_full_table_scans', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'schema_unused_indexes', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'schema_table_lock_waits', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$schema_table_lock_waits', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'statement_analysis', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$statement_analysis', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'statements_with_errors_or_warnings', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$statements_with_errors_or_warnings', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'statements_with_full_table_scans', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$statements_with_full_table_scans', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$ps_digest_avg_latency_distribution', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$ps_digest_95th_percentile_by_avg_us', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'statements_with_runtimes_in_95th_percentile', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$statements_with_runtimes_in_95th_percentile', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'statements_with_sorting', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$statements_with_sorting', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'statements_with_temp_tables', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$statements_with_temp_tables', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'user_summary_by_file_io_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$user_summary_by_file_io_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'user_summary_by_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$user_summary_by_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'user_summary_by_statement_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$user_summary_by_statement_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'user_summary_by_statement_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$user_summary_by_statement_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'user_summary_by_stages', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$user_summary_by_stages', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'user_summary', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$user_summary', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'host_summary_by_file_io_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$host_summary_by_file_io_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'host_summary_by_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$host_summary_by_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'host_summary_by_statement_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$host_summary_by_statement_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'host_summary_by_statement_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$host_summary_by_statement_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'host_summary_by_stages', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 23), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$host_summary_by_stages', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'host_summary', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$host_summary', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'wait_classes_global_by_avg_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$wait_classes_global_by_avg_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'wait_classes_global_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$wait_classes_global_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'waits_by_user_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$waits_by_user_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'waits_by_host_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$waits_by_host_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'waits_global_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$waits_global_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'metrics', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'processlist', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$processlist', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'session', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'x$session', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'sys', 'session_ssl_status', 'VIEW', None, None, None, None, None, None, None, None, None, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, None, 'VIEW'), ('def', 'information_schema', 'ENABLED_ROLES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, '', ''), ('def', 'information_schema', 'APPLICABLE_ROLES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, '', ''), ('def', 'information_schema', 'ADMINISTRABLE_ROLE_AUTHORIZATIONS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, '', ''), ('def', 'information_schema', 'ROLE_COLUMN_GRANTS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, '', ''), ('def', 'information_schema', 'ROLE_ROUTINE_GRANTS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, '', ''), ('def', 'information_schema', 'ROLE_TABLE_GRANTS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, '', ''), ('def', 'information_schema', 'USER_ATTRIBUTES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_SESSION_TEMP_TABLESPACES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_VIRTUAL', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_BUFFER_POOL_STATS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_BUFFER_PAGE', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_CMPMEM_RESET', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_CMPMEM', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_TRX', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_CMP_PER_INDEX_RESET', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_CMP_RESET', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_FT_DEFAULT_STOPWORD', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_METRICS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_TEMP_TABLE_INFO', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_FT_DELETED', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_TABLESTATS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_CMP', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_TABLES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_FT_BEING_DELETED', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_BUFFER_PAGE_LRU', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_CMP_PER_INDEX', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_FT_CONFIG', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_CACHED_INDEXES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_FT_INDEX_TABLE', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_COLUMNS', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_FT_INDEX_CACHE', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_INDEXES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'information_schema', 'INNODB_TABLESPACES', 'SYSTEM VIEW', None, 10, None, 0, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 26), None, None, None, None, '', ''), ('def', 'performance_schema', 'innodb_redo_log_files', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1, 0, 0, 0, 0, 0, None, datetime.datetime(2025, 10, 25, 14, 15, 52), None, None, 'utf8mb4_0900_ai_ci', None, '', ''), ('def', 'sqlancer_norec_mysql', 't0', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 1970324836974591, 1024, 0, 1, datetime.datetime(2025, 10, 29, 8, 39, 13), datetime.datetime(2025, 10, 29, 8, 39, 13), None, 'utf8mb4_0900_ai_ci', None, '', '')]",
      "transfer_result": "[('def', 'information_schema', 'ALL_PLUGINS', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=10380835156842741 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'APPLICABLE_ROLES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1565, 0, 16743935, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=10720', '', 0, 'Y'), ('def', 'information_schema', 'CHARACTER_SETS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 480, 0, 16501920, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=34952', '', 0, 'Y'), ('def', 'information_schema', 'CHECK_CONSTRAINTS', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=8587869680497929 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'COLLATIONS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 328, 0, 16377696, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=51150', '', 0, 'Y'), ('def', 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 502, 0, 16710576, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=33420', '', 0, 'Y'), ('def', 'information_schema', 'COLUMNS', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=2927589918062141 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'COLUMN_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 3478, 0, 16767438, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=4823', '', 0, 'Y'), ('def', 'information_schema', 'ENABLED_ROLES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 388, 0, 16606012, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=43240', '', 0, 'Y'), ('def', 'information_schema', 'ENGINES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 732, 0, 16685940, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=22919', '', 0, 'Y'), ('def', 'information_schema', 'EVENTS', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=654116665143418 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'FILES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 4004, 0, 16756740, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=4190', '', 0, 'Y'), ('def', 'information_schema', 'GLOBAL_STATUS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 12484, 0, 16766012, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=1343', '', 0, 'Y'), ('def', 'information_schema', 'GLOBAL_VARIABLES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 12484, 0, 16766012, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=1343', '', 0, 'Y'), ('def', 'information_schema', 'KEYWORDS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 195, 0, 16357770, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=86037', '', 0, 'Y'), ('def', 'information_schema', 'KEY_CACHES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 660, 0, 16675560, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=25420', '', 0, 'Y'), ('def', 'information_schema', 'KEY_COLUMN_USAGE', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 4638, 0, 16766370, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=3617', '', 0, 'Y'), ('def', 'information_schema', 'KEY_PERIOD_USAGE', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 4042, 0, 16750048, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=4150', '', 0, 'Y'), ('def', 'information_schema', 'OPTIMIZER_COSTS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 639, 0, 16750746, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=26255', '', 0, 'Y'), ('def', 'information_schema', 'OPTIMIZER_TRACE', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=636094623231363848 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'PARAMETERS', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=6630749127861089 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'PARTITIONS', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=6153016702371431 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'PERIODS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 2505, 0, 16728390, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=6697', '', 0, 'Y'), ('def', 'information_schema', 'PLUGINS', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=10380835156842741 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'PROCESSLIST', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=16440948372290152 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'PROFILING', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 309, 0, 16615857, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=54295', '', 0, 'Y'), ('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 4815, 0, 16770645, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=3484', '', 0, 'Y'), ('def', 'information_schema', 'ROUTINES', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=617422903026058 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'SCHEMATA', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 6635, 0, 16760010, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=2528', '', 0, 'Y'), ('def', 'information_schema', 'SCHEMA_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 3092, 0, 16752456, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=5426', '', 0, 'Y'), ('def', 'information_schema', 'SEQUENCES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 2179, 0, 16736899, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=7699', '', 0, 'Y'), ('def', 'information_schema', 'SESSION_STATUS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 12484, 0, 16766012, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=1343', '', 0, 'Y'), ('def', 'information_schema', 'SESSION_VARIABLES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 12484, 0, 16766012, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=1343', '', 0, 'Y'), ('def', 'information_schema', 'STATISTICS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 5764, 0, 16761712, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=2910', '', 0, 'Y'), ('def', 'information_schema', 'SQL_FUNCTIONS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 195, 0, 16357770, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=86037', '', 0, 'Y'), ('def', 'information_schema', 'SYSTEM_VARIABLES', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=578068505333883 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'TABLES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 14929, 0, 16765267, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=1123', '', 0, 'Y'), ('def', 'information_schema', 'TABLESPACES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 6952, 0, 16754320, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=2413', '', 0, 'Y'), ('def', 'information_schema', 'TABLE_CONSTRAINTS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 2504, 0, 16721712, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=6700', '', 0, 'Y'), ('def', 'information_schema', 'TABLE_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 3285, 0, 16760070, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=5107', '', 0, 'Y'), ('def', 'information_schema', 'TRIGGERS', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=603347421786797 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'USERS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1172, 0, 16719752, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=14315', '', 0, 'Y'), ('def', 'information_schema', 'USER_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 2899, 0, 16747523, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=5787', '', 0, 'Y'), ('def', 'information_schema', 'VIEWS', 'SYSTEM VIEW', 'Aria', 11, 'Page', None, 0, 8192, 4503599627288576, 8192, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), datetime.datetime(2025, 10, 29, 8, 39, 54), None, 'utf8mb3_general_ci', None, 'max_rows=5319130355740931 transactional=0', '', 137438945280, 'Y'), ('def', 'information_schema', 'CLIENT_STATISTICS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 402, 0, 16530240, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=41734', '', 0, 'Y'), ('def', 'information_schema', 'INDEX_STATISTICS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1751, 0, 16767576, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=9581', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_FT_CONFIG', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1163, 0, 16705332, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=14425', '', 0, 'Y'), ('def', 'information_schema', 'GEOMETRY_COLUMNS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 4244, 0, 16759556, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=3953', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_SYS_TABLESTATS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 250, 0, 16384000, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=67108', '', 0, 'Y'), ('def', 'information_schema', 'SPATIAL_REF_SYS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 7691, 0, 16758689, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=2181', '', 0, 'Y'), ('def', 'information_schema', 'USER_STATISTICS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 583, 0, 16748424, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=28777', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_TRX', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 4430, 0, 16767550, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=3787', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_CMP_PER_INDEX', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 600, 0, 16556400, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=27962', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_METRICS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1830, 0, 16757310, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=9167', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_FT_DELETED', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 9, 0, 9437184, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=1864135', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_CMP', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 25, 0, 13107200, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=671088', '', 0, 'Y'), ('def', 'information_schema', 'THREAD_POOL_WAITS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 58, 0, 15204352, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=289262', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_CMP_RESET', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 25, 0, 13107200, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=671088', '', 0, 'Y'), ('def', 'information_schema', 'THREAD_POOL_QUEUES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 30, 0, 15728640, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=559240', '', 0, 'Y'), ('def', 'information_schema', 'TABLE_STATISTICS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1221, 0, 16735026, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=13740', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_SYS_FIELDS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 206, 0, 16615754, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=81442', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_BUFFER_PAGE_LRU', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 3559, 0, 16770008, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=4714', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_LOCKS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 30994, 0, 16767754, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=541', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_FT_INDEX_TABLE', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1054, 0, 16744898, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=15917', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_CMPMEM', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 29, 0, 15204352, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=578524', '', 0, 'Y'), ('def', 'information_schema', 'THREAD_POOL_GROUPS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 27, 0, 14155776, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=621378', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_CMP_PER_INDEX_RESET', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 600, 0, 16556400, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=27962', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_SYS_FOREIGN_COLS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 972, 0, 16707708, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=17260', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_FT_INDEX_CACHE', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1054, 0, 16744898, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=15917', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_BUFFER_POOL_STATS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 225, 0, 16270875, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=74565', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_FT_BEING_DELETED', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 9, 0, 9437184, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=1864135', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_SYS_FOREIGN', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1752, 0, 16700064, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=9576', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_CMPMEM_RESET', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 29, 0, 15204352, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=578524', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_FT_DEFAULT_STOPWORD', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 56, 0, 14680064, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=299593', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_SYS_TABLES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 1995, 0, 16734060, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=8409', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_SYS_COLUMNS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 222, 0, 16627356, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=75573', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_SYS_TABLESPACES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 3606, 0, 16767900, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=4652', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_SYS_INDEXES', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 231, 0, 16704765, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=72628', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_BUFFER_PAGE', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 3556, 0, 16755872, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=4718', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_SYS_VIRTUAL', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 17, 0, 11883850, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=986895', '', 0, 'Y'), ('def', 'information_schema', 'user_variables', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 6631, 0, 16769799, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=2530', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_TABLESPACES_ENCRYPTION', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 2013, 0, 16752186, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=8334', '', 0, 'Y'), ('def', 'information_schema', 'INNODB_LOCK_WAITS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 505, 0, 16547840, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=33222', '', 0, 'Y'), ('def', 'information_schema', 'THREAD_POOL_STATS', 'SYSTEM VIEW', 'MEMORY', 11, 'Fixed', None, 85, 0, 16205250, 0, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 54), None, None, 'utf8mb3_general_ci', None, 'max_rows=197379', '', 0, 'Y'), ('def', 'sqlancer_norec_mariadb', 't0', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 1970324836974591, 1024, 0, None, datetime.datetime(2025, 10, 29, 8, 39, 17), datetime.datetime(2025, 10, 29, 8, 39, 17), None, 'utf8mb4_uca1400_ai_ci', None, '', '', 17179868160, 'N'), ('def', 'sys', 'statements_with_runtimes_in_95th_percentile', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$host_summary_by_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'user_summary_by_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'innodb_lock_waits', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$host_summary_by_stages', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$schema_flattened_keys', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'host_summary_by_file_io_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$io_global_by_wait_by_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'schema_tables_with_full_table_scans', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'user_summary', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'user_summary_by_file_io_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$schema_table_lock_waits', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'io_global_by_file_by_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$latest_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'statements_with_sorting', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'schema_index_statistics', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'host_summary_by_stages', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'wait_classes_global_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$innodb_buffer_stats_by_table', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$io_global_by_wait_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$host_summary_by_statement_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'innodb_buffer_stats_by_table', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'user_summary_by_statement_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'schema_table_statistics_with_buffer', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$statements_with_sorting', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$statements_with_runtimes_in_95th_percentile', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$ps_digest_95th_percentile_by_avg_us', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'host_summary', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$statements_with_temp_tables', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'host_summary_by_statement_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$host_summary_by_statement_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$wait_classes_global_by_avg_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$user_summary_by_statement_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$user_summary_by_stages', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'statements_with_errors_or_warnings', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'io_global_by_wait_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$memory_by_user_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'schema_redundant_indexes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$user_summary_by_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'schema_table_lock_waits', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$waits_global_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'metrics', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'privileges_by_table_by_level', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$waits_by_user_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'wait_classes_global_by_avg_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$statements_with_errors_or_warnings', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$processlist', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'host_summary_by_statement_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'sys_config', 'BASE TABLE', 'Aria', 10, 'Page', 6, 2730, 16384, 17592186011648, 16384, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_general_ci', None, 'transactional=1', '', 2305843009213685760, 'N'), ('def', 'sys', 'waits_by_user_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'statements_with_temp_tables', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$statement_analysis', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'session', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'schema_object_overview', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'schema_auto_increment_columns', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'user_summary_by_stages', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'io_global_by_file_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$innodb_buffer_stats_by_schema', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$innodb_lock_waits', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'session_ssl_status', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'version', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$statements_with_full_table_scans', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'processlist', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'statements_with_full_table_scans', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$schema_tables_with_full_table_scans', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'memory_global_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'user_summary_by_statement_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$schema_index_statistics', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$wait_classes_global_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$waits_by_host_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$host_summary', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'waits_by_host_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$io_by_thread_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$host_summary_by_file_io_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'memory_by_thread_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'schema_table_statistics', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'schema_unused_indexes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'memory_global_total', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$user_summary', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$schema_table_statistics_with_buffer', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'memory_by_host_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$user_summary_by_statement_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'statement_analysis', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$memory_by_host_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$user_summary_by_file_io_type', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'io_by_thread_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$ps_schema_table_statistics_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$schema_table_statistics', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$memory_global_total', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'latest_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$memory_by_thread_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'ps_check_lost_instrumentation', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'waits_global_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$memory_global_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'host_summary_by_file_io', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$io_global_by_file_by_latency', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'memory_by_user_by_current_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$ps_digest_avg_latency_distribution', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'io_global_by_wait_by_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$session', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'innodb_buffer_stats_by_schema', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'sys', 'x$io_global_by_file_by_bytes', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'mysql', 'time_zone_name', 'BASE TABLE', 'Aria', 10, 'Page', 497, 65, 32768, 17592186011648, 16384, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), datetime.datetime(2025, 9, 16, 5, 37, 24), None, 'utf8mb3_general_ci', None, 'transactional=1', 'Time zone names', 2305843009213685760, 'N'), ('def', 'mysql', 'slow_log', 'BASE TABLE', 'CSV', 10, 'Dynamic', 2, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', 'Slow log', 0, 'N'), ('def', 'mysql', 'table_stats', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_bin', None, 'transactional=0', 'Statistics on Tables', 2305843009213685760, 'N'), ('def', 'mysql', 'event', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_general_ci', None, 'transactional=1', 'Events', 2305843009213685760, 'N'), ('def', 'mysql', 'global_priv', 'BASE TABLE', 'Aria', 11, 'Page', 6, 2730, 16384, 17592186011648, 16384, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 24), None, 'utf8mb3_bin', None, 'transactional=1', 'Users and global privileges', 2305843009213685760, 'N'), ('def', 'mysql', 'index_stats', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_bin', None, 'transactional=0', 'Statistics on Indexes', 2305843009213685760, 'N'), ('def', 'mysql', 'innodb_table_stats', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 1, 16384, 16384, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 10, 29, 8, 37, 32), None, 'utf8mb3_bin', None, 'stats_persistent=0', '', 0, 'N'), ('def', 'mysql', 'time_zone_leap_second', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_general_ci', None, 'transactional=1', 'Leap seconds information for time zones', 9007199254732800, 'N'), ('def', 'mysql', 'proxies_priv', 'BASE TABLE', 'Aria', 10, 'Page', 2, 8192, 16384, 17592186011648, 24576, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 24), datetime.datetime(2025, 9, 16, 5, 37, 19), 'utf8mb3_bin', None, 'transactional=1', 'User proxy privileges', 2305843009213685760, 'N'), ('def', 'mysql', 'servers', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 18), None, 'utf8mb3_general_ci', None, 'transactional=1', 'MySQL Foreign Servers table', 2305843009213685760, 'N'), ('def', 'mysql', 'procs_priv', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_bin', None, 'transactional=1', 'Procedure privileges', 2305843009213685760, 'N'), ('def', 'mysql', 'time_zone', 'BASE TABLE', 'Aria', 10, 'Page', 497, 65, 32768, 17592186011648, 16384, 0, 498, datetime.datetime(2025, 9, 16, 5, 37, 23), datetime.datetime(2025, 9, 16, 5, 37, 24), None, 'utf8mb3_general_ci', None, 'transactional=1', 'Time zones', 9007199254732800, 'N'), ('def', 'mysql', 'db', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 18), None, 'utf8mb3_bin', None, 'transactional=1', 'Database privileges', 2305843009213685760, 'N'), ('def', 'mysql', 'time_zone_transition_type', 'BASE TABLE', 'Aria', 10, 'Page', 2722, 48, 131072, 17592186011648, 57344, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), datetime.datetime(2025, 9, 16, 5, 37, 24), datetime.datetime(2025, 9, 16, 5, 37, 24), 'utf8mb3_general_ci', None, 'page_checksum=1 transactional=1', 'Time zone transition types', 9007199254732800, 'N'), ('def', 'mysql', 'transaction_registry', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 49152, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, 'utf8mb3_bin', None, 'stats_persistent=0', '', 0, 'N'), ('def', 'mysql', 'column_stats', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_bin', None, 'transactional=0', 'Statistics on Columns', 2305843009213685760, 'N'), ('def', 'mysql', 'gtid_slave_pos', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 0, 0, 16384, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), None, None, 'latin1_swedish_ci', None, '', 'Replication slave GTID position', 0, 'N'), ('def', 'mysql', 'user', 'VIEW', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW', None, None), ('def', 'mysql', 'time_zone_transition', 'BASE TABLE', 'Aria', 10, 'Page', 31305, 43, 1368064, 17592186011648, 557056, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 24), datetime.datetime(2025, 9, 16, 5, 37, 24), datetime.datetime(2025, 9, 16, 5, 37, 24), 'utf8mb3_general_ci', None, 'page_checksum=1 transactional=1', 'Time zone transitions', 9007199254732800, 'N'), ('def', 'mysql', 'columns_priv', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 18), None, 'utf8mb3_bin', None, 'transactional=1', 'Column privileges', 2305843009213685760, 'N'), ('def', 'mysql', 'roles_mapping', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 18), None, 'utf8mb3_bin', None, 'transactional=1', 'Granted roles', 2305843009213685760, 'N'), ('def', 'mysql', 'proc', 'BASE TABLE', 'Aria', 10, 'Page', 53, 8810, 466944, 17592186011648, 16384, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 21), None, 'utf8mb3_general_ci', None, 'transactional=1', 'Stored Procedures', 2305843009213685760, 'N'), ('def', 'mysql', 'func', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 18), None, 'utf8mb3_bin', None, 'transactional=1', 'User defined functions', 2305843009213685760, 'N'), ('def', 'mysql', 'help_relation', 'BASE TABLE', 'Aria', 10, 'Page', 202, 81, 16384, 17592186011648, 24576, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_general_ci', None, 'transactional=0', 'keyword-topic relation', 9007199254732800, 'N'), ('def', 'mysql', 'help_topic', 'BASE TABLE', 'Aria', 10, 'Page', 839, 2821, 2367488, 17592186011648, 40960, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_general_ci', None, 'transactional=0', 'help topics', 2305843009213685760, 'N'), ('def', 'mysql', 'plugin', 'BASE TABLE', 'Aria', 10, 'Page', 0, 0, 8192, 17592186011648, 8192, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 18), None, 'utf8mb3_general_ci', None, 'transactional=1', 'MySQL plugins', 2305843009213685760, 'N'), ('def', 'mysql', 'help_keyword', 'BASE TABLE', 'Aria', 10, 'Page', 106, 154, 16384, 17592186011648, 24576, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_general_ci', None, 'transactional=0', 'help keywords', 2305843009213685760, 'N'), ('def', 'mysql', 'tables_priv', 'BASE TABLE', 'Aria', 10, 'Page', 1, 16384, 16384, 17592186011648, 24576, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 18), 'utf8mb3_bin', None, 'transactional=1', 'Table privileges', 2305843009213685760, 'N'), ('def', 'mysql', 'innodb_index_stats', 'BASE TABLE', 'InnoDB', 10, 'Dynamic', 4, 4096, 16384, 0, 0, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 19), datetime.datetime(2025, 10, 29, 8, 37, 32), None, 'utf8mb3_bin', None, 'stats_persistent=0', '', 0, 'N'), ('def', 'mysql', 'general_log', 'BASE TABLE', 'CSV', 10, 'Dynamic', 2, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', 'General log', 0, 'N'), ('def', 'mysql', 'help_category', 'BASE TABLE', 'Aria', 10, 'Page', 50, 327, 16384, 17592186011648, 24576, 0, None, datetime.datetime(2025, 9, 16, 5, 37, 18), datetime.datetime(2025, 9, 16, 5, 37, 19), None, 'utf8mb3_general_ci', None, 'transactional=0', 'help categories', 2305843009213685760, 'N'), ('def', 'performance_schema', 'accounts', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'cond_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_stages_current', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_stages_history', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_stages_history_long', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_stages_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_stages_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_stages_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_stages_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_stages_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_current', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_history', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_history_long', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_summary_by_digest', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_summary_by_program', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_statements_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_transactions_current', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_transactions_history', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_transactions_history_long', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_transactions_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_transactions_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_transactions_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_transactions_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_transactions_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_waits_current', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_waits_history', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_waits_history_long', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_waits_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_waits_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_waits_summary_by_instance', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_waits_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_waits_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'events_waits_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'file_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'file_summary_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'file_summary_by_instance', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'global_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 261, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'host_cache', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'hosts', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'memory_summary_by_account_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'memory_summary_by_host_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'memory_summary_by_thread_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'memory_summary_by_user_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'memory_summary_global_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'metadata_locks', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'mutex_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'objects_summary_global_by_type', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'performance_timers', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 5, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'prepared_statements_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'replication_applier_configuration', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'replication_applier_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'replication_applier_status_by_coordinator', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'replication_applier_status_by_worker', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'replication_connection_configuration', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 1, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'rwlock_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'session_account_connect_attrs', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_bin', None, '', '', 0, 'N'), ('def', 'performance_schema', 'session_connect_attrs', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_bin', None, '', '', 0, 'N'), ('def', 'performance_schema', 'session_status', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 261, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'setup_actors', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'setup_consumers', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 15, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'setup_instruments', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'setup_objects', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'setup_timers', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 5, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'socket_instances', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'socket_summary_by_event_name', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'socket_summary_by_instance', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'status_by_account', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'status_by_host', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'status_by_thread', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'status_by_user', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'table_handles', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'table_io_waits_summary_by_index_usage', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'table_io_waits_summary_by_table', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'table_lock_waits_summary_by_table', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'threads', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'user_variables_by_thread', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Dynamic', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N'), ('def', 'performance_schema', 'users', 'BASE TABLE', 'PERFORMANCE_SCHEMA', 10, 'Fixed', 0, 0, 0, 0, 0, 0, None, None, None, None, 'utf8mb3_general_ci', None, '', '', 0, 'N')]",
      "mutate_result": "[(Decimal('299'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement is compatible with MariaDB as both systems support querying the information_schema. The statement retrieves all columns from the TABLES table, and no modifications were ne"
    },
    {
      "index": 2031,
      "sql": "SELECT * FROM t0 WHERE t0.c0 XOR 0;  -- expected: 0.5, actual: no row is fetched",
      "orig_result": "[('0.5',)]",
      "transfer_result": "[]",
      "mutate_result": "[(Decimal('0'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE t0.c0 XOR 0' was transferred to MariaDB without any modifications, as both databases support the same syntax for this type of query. The XOR operat"
    },
    {
      "index": 2039,
      "sql": "SELECT * FROM t0 WHERE GREATEST((-1) & (-1), -t0.c0); -- expected: row is fetched, actual: row is not fetched",
      "orig_result": "[('a',)]",
      "transfer_result": "[]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE GREATEST((-1) & (-1), -t0.c0)' was transferred to MariaDB without any modifications. Both MySQL and MariaDB support the GREATEST function and the b"
    },
    {
      "index": 2040,
      "sql": "SELECT * FROM t0 WHERE GREATEST((-1) & (-1), -t0.c0); -- expected: row is fetched, actual: row is not fetched",
      "orig_result": "[('a',)]",
      "transfer_result": "[('a',)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "tidb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE GREATEST((-1) & (-1), -t0.c0)' can be directly transferred to TiDB without any modifications. Both MySQL and TiDB support the GREATEST function and"
    },
    {
      "index": 2043,
      "sql": "SELECT * FROM t0 WHERE (t0.c0 AND t0.c1) >= TRUE; -- ERROR:  negative bitmapset member not allowed",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "postgres",
      "b_db": "duckdb",
      "explanation": "The original PostgreSQL statement attempts to select rows from table t0 where the logical AND of columns c0 and c1 is greater than or equal to TRUE. However, this can lead to errors in some SQL implem"
    },
    {
      "index": 2048,
      "sql": "SELECT MIN(t0.c1), t0.c0 FROM t0 WHERE t0.c1 ISNULL; -- expected: NULL | 1, actual: NULL | NULL",
      "orig_result": "[(None, 1)]",
      "transfer_result": "[(None, None)]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement attempted to select the minimum value of column c1 and the value of column c0 without including c0 in the GROUP BY clause, which caused a Binder Error in DuckDB. To resolve "
    },
    {
      "index": 2049,
      "sql": "SELECT * FROM v0, t0 WHERE t0.c1 <= v0.c0; -- unexpected: row is not fetched",
      "orig_result": "[(1, 'a', '1')]",
      "transfer_result": "[(1.0, 'a', '1')]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement attempted to compare 't0.c1' (which is of type VARCHAR) with 'v0.c0' (which is of type DOUBLE). DuckDB requires explicit casting for such comparisons. I modified the SQL by "
    },
    {
      "index": 2050,
      "sql": "SELECT * FROM v0 WHERE v0.c1 < v0.c0; -- unexpected: row is not fetched",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement resulted in an error due to a type mismatch between 'c1' and 'c0', where 'c1' is of type DOUBLE and 'c0' is of type VARCHAR. To resolve this, I explicitly cast both 'v0.c1' "
    },
    {
      "index": 2051,
      "sql": "SELECT 0 IN (c0) FROM v0; -- expected: 0, actual: 1",
      "orig_result": "[(0,)]",
      "transfer_result": "[(True,)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement 'SELECT 0 IN (SELECT c0 FROM v0)' resulted in a type mismatch error because '0' is an integer literal while 'c0' is a VARCHAR in the view 'v0'. To resolve this, I modified t"
    },
    {
      "index": 2055,
      "sql": "SELECT * FROM t0 LEFT JOIN v0 ON t0.c0 WHERE NOT(v0.c0 = 'a'); -- unexpected: fetches no row",
      "orig_result": "[(1, 'integer'), (1, 'integer')]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement attempted to compare 'v0.c0' with the string 'a', which caused a conversion error because 'v0.c0' is likely an integer column. To resolve this issue while maintaining the re"
    },
    {
      "index": 2060,
      "sql": "SELECT * FROM t0 WHERE - x'ce' >= t0.c0; -- unexpected: row is not fetched",
      "orig_result": "[('-1', None)]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The error message indicated that there was a type mismatch between the integer literal (-1) and the 'c0' column, which is of type TEXT (VARCHAR). To resolve this, I added an explicit cast to convert '"
    },
    {
      "index": 2064,
      "sql": "SELECT * FROM t0 WHERE t0.c1 IS FALSE BETWEEN FALSE AND TRUE; -- unexpected: row is not fetched",
      "orig_result": "[(None,)]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement uses 'IS FALSE BETWEEN FALSE AND TRUE', which is not a valid SQL syntax and may lead to unexpected results. Instead, I have simplified the condition to 'WHERE t0.c1 = FAL"
    },
    {
      "index": 2066,
      "sql": "SELECT CAST(+ t0.c0 AS BLOB) LIKE 0 FROM t0; -- expected: 0, actual: 1",
      "orig_result": "[(0,)]",
      "transfer_result": "[(False,)]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The SQLite statement 'SELECT CAST(+ t0.c0 AS BLOB) LIKE 0 FROM t0;' is modified to 'SELECT CAST(t0.c0 AS VARCHAR) LIKE '1' FROM t0;' in DuckDB. The '+' sign is removed as it is unnecessary, and the co"
    },
    {
      "index": 2067,
      "sql": "SELECT * FROM t0 WHERE c0 IN ('2070934912552030444'); -- unexpected: row is fetched",
      "orig_result": "[]",
      "transfer_result": "[(2.0709349125520305e+18,)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "In DuckDB, numeric literals should not be enclosed in quotes. The column name 'c0' remains unchanged, and the value '2070934912552030444' is treated as a valid numeric literal. This translation adhere"
    },
    {
      "index": 2069,
      "sql": "SELECT * FROM t0 WHERE t0.c1 <= t0.c0; -- unexpected: row is not fetched",
      "orig_result": "[]",
      "transfer_result": "[('a', 'B')]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The SQL statement can be directly translated from SQLite to DuckDB without any changes, as both databases support the same syntax for SELECT statements. The condition 't0.c1 <= t0.c0' is preserved, en"
    },
    {
      "index": 2071,
      "sql": "SELECT v0.c1 >= v0.c0 FROM v0; -- actual: 1, expected: 0",
      "orig_result": "[(1,)]",
      "transfer_result": "[(True,)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement selects a boolean expression comparing v0.c1 and v0.c0 from the view v0. Since DuckDB supports the same syntax for selecting and evaluating expressions, the statement rem"
    },
    {
      "index": 2072,
      "sql": "SELECT * FROM t0 WHERE t0.c0 GLOB '-*'; -- unexpected: row is not fetched",
      "orig_result": "[(-1,)]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement 'SELECT * FROM t0 WHERE t0.c0 LIKE '-%' resulted in a Binder Error because the LIKE operator in DuckDB requires both operands to be of the same type, specifically VARCHAR. S"
    },
    {
      "index": 2078,
      "sql": "SELECT * FROM t0 WHERE (+ t0.c1, 1) >= (t0.c0, 1); -- expected: row is not fetched, actual: row is fetched",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original comparison was attempting to perform arithmetic operations on VARCHAR types, which caused errors in DuckDB. To resolve this, I removed the unnecessary addition of 1 and directly compared "
    },
    {
      "index": 2085,
      "sql": "SELECT * FROM t0 WHERE 0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1; -- unexpected: row is fetched",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "In the original SQLite statement, the condition '0 = t0.c2' could potentially lead to fetching unexpected rows, especially if 'c2' has a value of 0. To adhere to the requirement of avoiding meaningles"
    },
    {
      "index": 2087,
      "sql": "SELECT * FROM t0 WHERE t0.c1 NOT IN (t0.c0); -- unexpected: cache lookup failed for collation 0",
      "orig_result": "None",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "postgres",
      "b_db": "duckdb",
      "explanation": "In DuckDB, the original query can be directly translated with minor adjustments. The use of 'NOT IN' remains valid, and to ensure proper evaluation without collation issues, I wrapped 't0.c0' in a sub"
    },
    {
      "index": 2089,
      "sql": "SELECT * FROM t0 WHERE t0.c2 OR t0.c1 OR t0.c0; -- TRAP: FailedAssertion(\"clauses != NIL\", File: \"mcv.c\", Line: 1551)",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "postgres",
      "b_db": "duckdb",
      "explanation": "The PostgreSQL statement 'SELECT * FROM t0 WHERE t0.c2 OR t0.c1 OR t0.c0;' was modified to 'SELECT * FROM t0 WHERE t0.c0 = TRUE OR t0.c1 = TRUE OR t0.c2 = TRUE;' for DuckDB. This change ensures that t"
    },
    {
      "index": 2091,
      "sql": "SELECT * FROM t0 WHERE t0.c0 LIKE ''; -- ERROR:  no = operator for opfamily 426",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "postgres",
      "b_db": "duckdb",
      "explanation": "The original PostgreSQL statement 'SELECT * FROM t0 WHERE t0.c0 LIKE '''' ' is problematic because it attempts to match an empty string, which can lead to errors in certain contexts. In DuckDB, using "
    },
    {
      "index": 2100,
      "sql": "SELECT COUNT(*) FROM t0, t1 WHERE (SELECT AVG(0) FILTER(WHERE t1.c1)); -- segmentation fault",
      "orig_result": "None",
      "transfer_result": "[(0,)]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT COUNT(*) FROM t0, t1 WHERE (SELECT AVG(0) FILTER(WHERE t1.c1));' contains a subquery that attempts to calculate the average of a meaningless feature (0), which is"
    },
    {
      "index": 2101,
      "sql": "SELECT * FROM t0 WHERE (1 BETWEEN CAST(t0.c0 AS TEXT) AND t0.c0); -- unexpected: row is fetched",
      "orig_result": "[]",
      "transfer_result": "[(1.0, 0)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement checks if the value 1 is between the casted value of t0.c0 and itself. In DuckDB, the BETWEEN clause can be used directly without casting, as long as the types are compat"
    },
    {
      "index": 2103,
      "sql": "SELECT * FROM t0 WHERE(c0, 0) IN(SELECT FIRST_VALUE(0) OVER(), 0); -- Segmentation fault",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement uses a window function with FIRST_VALUE, which is not directly translatable to DuckDB without introducing meaningless features like '0' or random values. Instead, I modif"
    },
    {
      "index": 2106,
      "sql": "SELECT * FROM t0 WHERE (t0.c0, 1) IN(SELECT NTILE(1) OVER(), 0 FROM t0); -- sqlite3.c:90197: sqlite3VdbeExec: Assertion `pC!=0' failed.",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement attempted to use a tuple in the WHERE clause, which caused the error because the subquery returned two columns instead of one. In DuckDB, we can modify the query by removing"
    },
    {
      "index": 2113,
      "sql": "SELECT * FROM t0; -- 1.0|1.0",
      "orig_result": "[(1.0, 1.0)]",
      "transfer_result": "[(1.0, 1.0)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement selects all columns from table t0. In DuckDB, the syntax for selecting columns remains the same, so we can directly translate this statement while ensuring that all colum"
    },
    {
      "index": 2115,
      "sql": "SELECT * FROM t0, t1 WHERE t0.c0 = t1.c0; -- expected: {0, -0}, actual: {}",
      "orig_result": "[(0, -0.0)]",
      "transfer_result": "[(1, 1.0)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0, t1 WHERE t0.c0 = t1.c0' could potentially return rows where t0.c0 is 0, which is considered a meaningless feature according to the requirements. To comp"
    },
    {
      "index": 2116,
      "sql": "SELECT * FROM t0, t1 WHERE t0.c0 = t1.c0; -- expected: {0, -0}, actual: {}",
      "orig_result": "[(0, -0.0)]",
      "transfer_result": "[]",
      "mutate_result": "[(Decimal('0'),)]",
      "a_db": "mysql",
      "b_db": "tidb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0, t1 WHERE t0.c0 = t1.c0;' has been modified to include a condition 'AND t0.c0 <> 0' to comply with the requirement of forbidding meaningless features suc"
    },
    {
      "index": 2119,
      "sql": "SELECT * FROM t0 WHERE 0.1 < c0; -- expected: {}, actual: {1163404482.0, 488566.0}",
      "orig_result": "[(Decimal('488566.000'),), (Decimal('1163404482.000'),)]",
      "transfer_result": "[(Decimal('1163404482'),), (Decimal('488566'),)]",
      "mutate_result": "[(2,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement selects all records from the table 't0' where the value of column 'c0' is greater than 0.1. This condition is valid and meaningful, and since PostgreSQL supports the same"
    },
    {
      "index": 2120,
      "sql": "SELECT t0.c0 FROM t0, t1 WHERE t1.c0 < t0.c0; -- Error: Not implemented: Unimplemented type for sort",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement can be directly translated to PostgreSQL without any modifications, as both databases support the same SQL syntax for this type of SELECT statement. The column names and "
    },
    {
      "index": 2122,
      "sql": "SELECT * FROM t0 RIGHT JOIN t1 ON t0.c0!=t1.c0; -- Error: Unhandled type for empty NL join",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement 'SELECT * FROM t0 RIGHT JOIN t1 ON t0.c0!=t1.c0' has been translated to PostgreSQL as 'SELECT * FROM t0 CROSS JOIN t1 WHERE t0.c0 != t1.c0'. This translation maintains al"
    },
    {
      "index": 2123,
      "sql": "SELECT * FROM t0 RIGHT JOIN t1 on true; -- expected: {}, actual: {1|false}",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement 'SELECT * FROM t0 RIGHT JOIN t1 on true' is translated to PostgreSQL by using a CROSS JOIN with a WHERE clause that evaluates to FALSE. This ensures that no rows are retu"
    },
    {
      "index": 2124,
      "sql": "SELECT * FROM t1 JOIN t0 ON t1.c0 < t1.c0 - t0.c0 WHERE t0.c0 <= t1.c0; -- Error: INTERNAL: Failed to bind column reference \"c0\" [5.0] (bindings: [6.0])",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The DuckDB statement 'SELECT * FROM t1 JOIN t0 ON t1.c0 < t1.c0 - t0.c0 WHERE t0.c0 <= t1.c0;' can be directly translated to PostgreSQL without any changes. Both databases support the same syntax for "
    },
    {
      "index": 2126,
      "sql": "SELECT * FROM t0 WHERE t0.c0 NOT SIMILAR TO 0; -- expected: {-10}, actual: {}",
      "orig_result": "None",
      "transfer_result": "[(-10,)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement 'SELECT * FROM t0 WHERE t0.c0 NOT SIMILAR TO 0' is translated to PostgreSQL using the 'NOT SIMILAR TO' operator, which is not directly supported for numeric comparisons. "
    },
    {
      "index": 2127,
      "sql": "SELECT * FROM t0 LEFT JOIN t1 ON t0.c0 <= t1.c0; -- Not implemented: Unimplemented type for nested loop join!",
      "orig_result": "[(0, 0)]",
      "transfer_result": "[(1, 1)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The DuckDB statement 'SELECT * FROM t0 LEFT JOIN t1 ON t0.c0 <= t1.c0' translates directly to PostgreSQL without any changes. Both databases support the same syntax for performing a LEFT JOIN with a c"
    },
    {
      "index": 2130,
      "sql": "SELECT * FROM t0 WHERE t0.c0 = true; -- Error: Invalid type: Invalid Type [BOOL]: Invalid type for index",
      "orig_result": "[]",
      "transfer_result": "[(True,)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement selects all records from table 't0' where the column 'c0' is true. In PostgreSQL, the syntax remains largely the same, and the boolean comparison is valid. Therefore, I r"
    },
    {
      "index": 2131,
      "sql": "SELECT * FROM t1, t0 WHERE NOT ((t1.c0 AND t0.c0) < 0); -- expected: {0|0}, actual: {}",
      "orig_result": "[(0, 0)]",
      "transfer_result": "[(1, 1)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The previous SQL statement 'SELECT * FROM t1, t0 WHERE NOT ((t1.c0 AND t0.c0) < 1)' resulted in an error because the AND operator requires boolean expressions, not integers. To resolve this, I modifie"
    },
    {
      "index": 2133,
      "sql": "SELECT t1.c0 FROM t1 JOIN t0 ON t1.c0 IN (t0.c0) WHERE t1.c0<=t0.c0; -- expected: {1.0}, actual: {4.67454452791745e-310}",
      "orig_result": "[(1.0,)]",
      "transfer_result": "[('1',), ('1',)]",
      "mutate_result": "[(2,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original SQL statement resulted in a type mismatch error because 't1.c0' is of type VARCHAR and 't0.c0' is of type INT. To resolve this, explicit type casts have been added to both 't1.c0' and 't0"
    },
    {
      "index": 2134,
      "sql": "SELECT * FROM t1, t2, t0 WHERE CONCAT(t1.c0) OR t0.c0; -- Segmentation fault",
      "orig_result": "[(0, 0, -1.0), (0, 0, -1.0)]",
      "transfer_result": "[(1, 1), (1, 2)]",
      "mutate_result": "[(2,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement attempts to select all columns from tables 't1', 't2', and 't0' with a condition that uses CONCAT, which is not appropriate in this context and could lead to a segmentati"
    },
    {
      "index": 2135,
      "sql": "SELECT * FROM t0 WHERE REGEXP_MATCHES(t0.c0, '1'); -- expected: {0.1}, actual: {}",
      "orig_result": "[('0.1',)]",
      "transfer_result": "[('0.1',)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The DuckDB statement 'SELECT * FROM t0 WHERE REGEXP_MATCHES(t0.c0, '1')' was translated to PostgreSQL by using the 'LIKE' operator instead of 'REGEXP_MATCHES', which is not directly supported in the s"
    },
    {
      "index": 2138,
      "sql": "SELECT * FROM t0 WHERE 1 > c1; -- Segmentation fault",
      "orig_result": "[('0', 0.0)]",
      "transfer_result": "[('default_value', 0.0)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "In PostgreSQL, the original condition '1 > c1' can be rewritten as 'c1 < 1' to maintain the same logic. This transformation adheres to the requirement of not using meaningless features. All column nam"
    },
    {
      "index": 2140,
      "sql": "SELECT * FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING t1.c0!=MAX(t1.c0) UNION ALL SELECT * FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING NOT t1.c0>MAX(t1.c0); -- nondeterministic",
      "orig_result": "[(0, '0.9201898334673894'), (0, '0')]",
      "transfer_result": "[(1, '1'), (1, '0.9201898334673894')]",
      "mutate_result": "[(2,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement 'SELECT * FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING t1.c0!=MAX(t1.c0) UNION ALL SELECT * FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING NOT t1.c0>MAX(t1.c0);' is already compati"
    },
    {
      "index": 2149,
      "sql": "SELECT SUM(-1) FROM t0; -- expected: {-1}, actual: {1.8446744073709552e+19}",
      "orig_result": "[(-1,)]",
      "transfer_result": "[(Decimal('-1'),)]",
      "mutate_result": "[(-1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement calculates the sum of -1 from the table 't0'. To adhere to the requirements, we must avoid meaningless features such as -1 directly in the query. Instead, we can cast -1 "
    },
    {
      "index": 2150,
      "sql": "SELECT * FROM t0 GROUP BY -4.40304405E8 ORDER BY (CASE 1 WHEN 0 THEN 0 ELSE -440304405 END); -- Assertion `!entry.first->Equals(&expr)' failed.",
      "orig_result": "None",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "In the original DuckDB statement, the GROUP BY clause uses a negative floating-point number (-4.40304405E8), which is not meaningful in the context of grouping rows. In PostgreSQL, we can replace it w"
    },
    {
      "index": 2151,
      "sql": "SELECT t0.c0 FROM t0 WHERE NOT (0 BETWEEN 0 AND t0.c0::BOOL); -- expected: {}, actual: {-1}",
      "orig_result": "[]",
      "transfer_result": "[(-1,)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The DuckDB statement 'SELECT t0.c0 FROM t0 WHERE NOT (0 BETWEEN 0 AND t0.c0::BOOL)' is translated to PostgreSQL as 'SELECT * FROM t0 WHERE t0.c0 <> 0'. This maintains the column name 'c0' and avoids m"
    },
    {
      "index": 2152,
      "sql": "SELECT * FROM t0 WHERE PREFIX(t0.c0, ''); -- Error: std::bad_alloc",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement uses the PREFIX function to filter rows based on the prefix of the column 'c0'. In PostgreSQL, the equivalent functionality can be achieved using the LIKE operator. The c"
    },
    {
      "index": 2158,
      "sql": "SELECT * FROM t0 WHERE t0.c0 = ''; -- expected: {''}, actual: {}",
      "orig_result": "[('',)]",
      "transfer_result": "[('',)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement selects all rows from table 't0' where the column 'c0' is equal to an empty string. In PostgreSQL, this syntax remains unchanged as it directly supports the comparison of"
    },
    {
      "index": 2160,
      "sql": "SELECT * FROM t0 WHERE DATE '2000-01-01' < t0.c0; -- expected: {2000-01-02}, actual: {}",
      "orig_result": "None",
      "transfer_result": "[('2000-01-02',)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement attempts to compare a date with a VARCHAR column, which results in an error in PostgreSQL due to type mismatch. To resolve this, the column 'c0' is explicitly cast to DAT"
    },
    {
      "index": 2161,
      "sql": "SELECT * FROM t0 WHERE c0 LIKE '' AND c0 < true; -- Assertion `tableFilter[0].comparison_type == ExpressionType::COMPARE_GREATERTHAN || tableFilter[0].comparison_type == ExpressionType::COMPARE_GREATERTHANOREQUALTO' failed.",
      "orig_result": "None",
      "transfer_result": "[('',)]",
      "mutate_result": "[(1,)]",
      "a_db": "duckdb",
      "b_db": "postgres",
      "explanation": "The original DuckDB statement includes a condition that checks if 'c0' is an empty string and compares 'c0' with a boolean value 'true'. Since an empty string is considered meaningless in this context"
    }
  ],
  "true_db_bug_indexes": [
    2002,
    2006,
    2008,
    2010,
    2014,
    2015,
    2016,
    2017,
    2018,
    2019,
    2021,
    2023,
    2031,
    2039,
    2040,
    2043,
    2048,
    2049,
    2050,
    2051,
    2055,
    2060,
    2064,
    2066,
    2067,
    2069,
    2071,
    2072,
    2078,
    2085,
    2087,
    2089,
    2091,
    2100,
    2101,
    2103,
    2106,
    2113,
    2115,
    2116,
    2119,
    2120,
    2122,
    2123,
    2124,
    2126,
    2127,
    2130,
    2131,
    2133,
    2134,
    2135,
    2138,
    2140,
    2149,
    2150,
    2151,
    2152,
    2158,
    2160,
    2161
  ],
  "translation_issues": [
    {
      "index": 2003,
      "sql": "SELECT * FROM t0 WHERE (LIKELY(~c0) OR TRUE); -- no row fetched",
      "orig_result": "[(None,)]",
      "transfer_result": "[(None,)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT * FROM t0 WHERE (LIKELY(~c0) OR TRUE)' has been modified for DuckDB compatibility. The 'LIKELY' function is not supported in DuckDB, and the expression '~c0' (whi"
    },
    {
      "index": 2013,
      "sql": "SELECT * FROM t0 WHERE (((0 IS NOT FALSE) OR NOT (0 IS FALSE OR (t0.c0 IN (-1)))) IS 0); -- fetches no row",
      "orig_result": "[('val',)]",
      "transfer_result": "[(None,)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT * FROM t0 WHERE (((0 IS NOT FALSE) OR NOT (0 IS FALSE OR (t0.c0 IN (-1)))) IS 0);' was modified to 'SELECT * FROM t0 WHERE (((0 IS NOT FALSE) OR NOT (0 IS FALSE O"
    },
    {
      "index": 2025,
      "sql": "SELECT * FROM t0 WHERE IFNULL(t0.c0, 1); -- expected: row is fetched, actual: no row is fetched",
      "orig_result": "[('\\n123',)]",
      "transfer_result": "[('\\n123',)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE IFNULL(t0.c0, 1);' has been translated to use 'NOT(t0.c0 <=> 1)' in MariaDB. This change is necessary because IFNULL is not used in the same way in"
    },
    {
      "index": 2027,
      "sql": "SELECT * FROM t0 WHERE t0.c0; -- expected: row is fetched, actual: row is not fetched",
      "orig_result": "[('0.9',)]",
      "transfer_result": "[('0.9',)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE t0.c0' was transferred to MariaDB by modifying the condition to ensure it functions correctly. In SQL, a condition like 't0.c0' alone does not eval"
    },
    {
      "index": 2028,
      "sql": "SELECT * FROM t0 WHERE t0.c0; -- expected: row is fetched, actual: row is not fetched",
      "orig_result": "[('0.9',)]",
      "transfer_result": "[('0.9',)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "tidb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE t0.c0' was transferred to TiDB by modifying the condition to 'WHERE t0.c0 IS NOT NULL'. This change ensures that the query fetches rows where the c"
    },
    {
      "index": 2029,
      "sql": "SELECT * FROM t0 WHERE CAST(IFNULL(t0.c0, -1) AS UNSIGNED); -- expected: row is selected, actual: no row is selected",
      "orig_result": "[(None,)]",
      "transfer_result": "[(None,)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE CAST(IFNULL(t0.c0, -1) AS UNSIGNED)' was translated to MariaDB by replacing the IFNULL function with a NOT NULL check using the '<=>' operator. Thi"
    },
    {
      "index": 2033,
      "sql": "SELECT * FROM t0, t1 WHERE (CAST(t1.c0 AS UNSIGNED)) > (IFNULL(\"u\", t0.c0)); -- expected: row is fetched, actual: no row is fetched",
      "orig_result": "[(0, -1)]",
      "transfer_result": "[(0, -1)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0, t1 WHERE (CAST(t1.c0 AS UNSIGNED)) > (IFNULL(\"u\", t0.c0));' was transferred to MariaDB without any changes, as both MySQL and MariaDB support this synta"
    },
    {
      "index": 2034,
      "sql": "SELECT * FROM t0, t1 WHERE (CAST(t1.c0 AS UNSIGNED)) > (IFNULL(\"u\", t0.c0)); -- expected: row is fetched, actual: no row is fetched",
      "orig_result": "[(0, -1)]",
      "transfer_result": "[(0, -1)]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "tidb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0, t1 WHERE (CAST(t1.c0 AS UNSIGNED)) > (IFNULL(\"u\", t0.c0));' was directly transferable to TiDB without any modifications. Both MySQL and TiDB support the"
    },
    {
      "index": 2037,
      "sql": "SELECT * FROM t0 WHERE t0.c1 < (t0.c0 & t0.c0) AND t0.c0 = -1; -- expected: fetches row, actual: does not fetch the row",
      "orig_result": "[(-1, 'a')]",
      "transfer_result": "[(-1, 'a')]",
      "mutate_result": "[(Decimal('1'),)]",
      "a_db": "mysql",
      "b_db": "mariadb",
      "explanation": "The original MySQL statement 'SELECT * FROM t0 WHERE t0.c1 < (t0.c0 & t0.c0) AND t0.c0 = -1;' was transferred to MariaDB with a modification to ensure compatibility. The comparison operator '<' was re"
    },
    {
      "index": 2056,
      "sql": "SELECT v0.c0 FROM v0, t0 WHERE t0.rowid NOT IN (0, 0, v0.c0); -- expected: '1e500', actual: Inf",
      "orig_result": "[('1e500',)]",
      "transfer_result": "[('1e500',)]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The previous SQL statement caused a conversion error because '1e500' is a string representation of a floating-point number and cannot be directly compared to an integer. To resolve this issue while en"
    },
    {
      "index": 2065,
      "sql": "SELECT * FROM t0 WHERE '' BETWEEN t0.c0 AND 1 IN (FALSE); -- unexpected: row is not fetched",
      "orig_result": "[(None,)]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT * FROM t0 WHERE '' BETWEEN t0.c0 AND 1 IN (FALSE)' contains an empty string, which is not meaningful in this context. To comply with the requirement of not introd"
    },
    {
      "index": 2068,
      "sql": "SELECT * FROM t0 WHERE t0.c2 IS NULL; -- unexpected: row is fetched",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement attempts to select rows where column 'c2' is NULL. However, since NULL is considered a meaningless feature according to the specified requirements, I replaced the conditi"
    },
    {
      "index": 2073,
      "sql": "SELECT * FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- no row is fetched",
      "orig_result": "[(b'\\xbb', None)]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement uses the INSTR function to find the position of t0.c0 within the hexadecimal string x'aabb'. In DuckDB, this can be replaced with the POSITION function, which serves a si"
    },
    {
      "index": 2079,
      "sql": "SELECT * FROM t0 WHERE (t0.c0, TRUE) > (CAST('' AS REAL), FALSE); -- unexpected: row is not fetched",
      "orig_result": "[('',)]",
      "transfer_result": "[('default_value',)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement attempted to compare a tuple of values where the first element was a numeric value cast to REAL, which caused a type mismatch when compared to the VARCHAR type of 't0.c0'. T"
    },
    {
      "index": 2095,
      "sql": "SELECT * FROM t1 LEFT JOIN t0 WHERE t0.c0 ISNULL; -- unexpected: row is fetched",
      "orig_result": "[]",
      "transfer_result": "[(1, None)]",
      "mutate_result": "[(1,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT * FROM t1 LEFT JOIN t0 WHERE t0.c0 ISNULL' is attempting to perform a LEFT JOIN without specifying an ON condition, which is necessary in DuckDB. I have modified "
    },
    {
      "index": 2096,
      "sql": "SELECT * FROM rt0, t0 WHERE (t0.c0, 0) > (rt0.c2, 0); -- unexpected: row is fetched",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(0,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQL statement attempted to select from 'rt0', which does not exist in the DuckDB environment, resulting in an error. To resolve this, I have modified the query to only select from 't0'. A"
    },
    {
      "index": 2097,
      "sql": "SELECT * FROM t0, t1 WHERE t0.c0 == 0; -- out of memory",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT * FROM t0, t1 WHERE t0.c0 == 0' uses '==' for comparison, which is valid in SQLite but in DuckDB, the standard equality operator is '='. Therefore, I have replace"
    },
    {
      "index": 2098,
      "sql": "SELECT * FROM t0 LEFT JOIN vt0 ON c2 IN (0) WHERE c1 IN (NULL);",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT * FROM t0 LEFT JOIN vt0 ON c2 IN (0) WHERE c1 IN (NULL)' contains conditions that violate the requirements, specifically the use of meaningless features like 0 an"
    },
    {
      "index": 2104,
      "sql": "SELECT * FROM t0 WHERE(c0 NOTNULL) COLLATE BINARY BETWEEN 0 AND c0; -- sqlite3.c:98025: sqlite3ExprSkipCollateAndLikely: Assertion `pExpr->op==TK_COLLATE' failed.",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement 'SELECT * FROM t0 WHERE(c0 NOTNULL) COLLATE BINARY BETWEEN 0 AND c0' includes a NOT NULL constraint and a COLLATE clause, which are not necessary in DuckDB for this query"
    },
    {
      "index": 2107,
      "sql": "SELECT * FROM t0 LEFT JOIN t1 WHERE (t1.c0 BETWEEN 0 AND 0) > ('' AND t0.c0); -- sqlite3.c:103271: impliesNotNullRow: Assertion `pWalker->eCode==0' failed.",
      "orig_result": "[]",
      "transfer_result": "[]",
      "mutate_result": "[(None,)]",
      "a_db": "sqlite",
      "b_db": "duckdb",
      "explanation": "The original SQLite statement attempts to perform a LEFT JOIN between tables t0 and t1 with a condition that is not valid due to the use of an empty string ('') and the comparison of a boolean express"
    }
  ]
}