set mykey hello;
get mykey;
set counter 1;
incr counter;
get counter;


db.myCollection.insertOne({ mykey: 'hello' })
db.myCollection.findOne({ mykey: { $exists: true } })
db.myCollection.updateOne({ counter: { $exists: true } }, { $set: { counter: 1 } }, { upsert: true })
db.myCollection.updateOne({ counter: { $exists: true } }, { $inc: { counter: 1 } }, { upsert: true })
db.myCollection.findOne({ counter: { $exists: true } }, { counter: 1 })
{"mutations": [{"mutated_sql": "db.myCollection.findOne({ counter: { $exists: false } }, { counter: 1 });", "explanation": "Changed the existence check to find documents where 'counter' does not exist.", "expected_relation": "Documents without the 'counter' field.", "syntax_valid": "valid"}, {"mutated_sql": "db.myCollection.findOne({ counter: { $gt: 0 } }, { counter: 1 });", "explanation": "Modified the filter to find documents where 'counter' is greater than 0.", "expected_relation": "Documents with 'counter' values greater than 0.", "syntax_valid": "valid"}, {"mutated_sql": "db.myCollection.findOne({ counter: { $lt: 10 } }, { counter: 1 });", "explanation": "Changed the filter to find documents where 'counter' is less than 10.", "expected_relation": "Documents with 'counter' values less than 10.", "syntax_valid": "valid"}, {"mutated_sql": "db.myCollection.findOne({ counter: { $type: 'int' } }, { counter: 1 });", "explanation": "Filtered documents where 'counter' is of type integer.", "expected_relation": "Documents with 'counter' as an integer type.", "syntax_valid": "valid"}, {"mutated_sql": "db.myCollection.findOne({ counter: { $exists: true, $gt: 5 } }, { counter: 1 });", "explanation": "Combined conditions to find documents where 'counter' exists and is greater than 5.", "expected_relation": "Documents with 'counter' existing and greater than 5.", "syntax_valid": "valid"}]}
