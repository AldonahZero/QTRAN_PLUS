{"index": 1001, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE test (c0 REAL);", "CREATE INDEX index_0 ON test(c0 COLLATE NOCASE);", "INSERT INTO test(c0) VALUES ('+/');", "SELECT * FROM test WHERE (c0 LIKE '+/'); -- fetches no row"]}
{"index": 1002, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0);", "CREATE INDEX index_0 ON t0(c0) WHERE (~c0) NOT NULL;", "INSERT INTO t0(c0) VALUES (NULL);", "SELECT * FROM t0 WHERE (LIKELY(~c0) OR TRUE); -- no row fetched"]}
{"index": 1003, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT UNIQUE COLLATE NOCASE);", "INSERT INTO t0(c0) VALUES ('./');", "SELECT * FROM t0 WHERE t0.c0 LIKE './'; -- fetches no rows"]}
{"index": 1004, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE IF NOT EXISTS t0 (c0);", "CREATE INDEX IF NOT EXISTS i0 ON t0(1) WHERE c0 NOT NULL;", "INSERT INTO t0(c0) VALUES(NULL);", "SELECT * FROM t0 WHERE t0.c0 IS NOT 1; -- returns no row"]}
{"index": 1009, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0 (c0 TEXT);", "INSERT INTO t0(c0) VALUES ('1.0');", "SELECT CAST(c0 AS NUMERIC) FROM t0; -- expected: 1, actual: 1.0"]}
{"index": 1010, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT PRIMARY KEY COLLATE NOCASE);", "INSERT INTO t0 VALUES (' 1-');", "SELECT * FROM t0 WHERE t0.c0 LIKE ' 1-'; -- expected: ' 1-', actual: no row is fetched"]}
{"index": 1011, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 COLLATE NOCASE);", "INSERT INTO t0(c0) VALUES ('a');", "SELECT * FROM t0 WHERE CAST(t0.c0 AS TEXT) = 'A'; -- expected: no row is fetched, actual: a"]}
{"index": 1012, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT UNIQUE COLLATE NOCASE);", "INSERT INTO t0(c0) VALUES ('.1%');", "SELECT * FROM t0 WHERE t0.c0 LIKE '.1%'; -- expected: '.1%', actual: no row is fetched"]}
{"index": 1020, "a_db": "mysql", "b_db": "mariadb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT);", "INSERT IGNORE INTO t0(c0) VALUES(\"\\n123\");", "SELECT * FROM t0 WHERE COALESCE(t0.c0); -- expected: row is fetched, actual: no row is fetched", "SELECT * FROM t0 WHERE IFNULL(t0.c0, 1); -- expected: row is fetched, actual: no row is fetched"]}
{"index": 1021, "a_db": "mysql", "b_db": "tidb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT);", "INSERT IGNORE INTO t0(c0) VALUES(\"\\n123\");", "SELECT * FROM t0 WHERE COALESCE(t0.c0); -- expected: row is fetched, actual: no row is fetched", "SELECT * FROM t0 WHERE IFNULL(t0.c0, 1); -- expected: row is fetched, actual: no row is fetched"]}
{"index": 1022, "a_db": "mysql", "b_db": "mariadb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT);", "INSERT INTO t0(c0) VALUES(0.9);", "SELECT * FROM t0 WHERE t0.c0; -- expected: row is fetched, actual: row is not fetched"]}
{"index": 1023, "a_db": "mysql", "b_db": "tidb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT);", "INSERT INTO t0(c0) VALUES(0.9);", "SELECT * FROM t0 WHERE t0.c0; -- expected: row is fetched, actual: row is not fetched"]}
{"index": 1036, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 UNIQUE, c1);", "INSERT INTO t0(c0, c1) VALUES (NULL, 1);", "SELECT MIN(t0.c0), t0.c1 FROM t0; -- expected: NULL | 1, actual: NULL | NULL"]}
{"index": 1037, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0 (c0, c1);", "CREATE INDEX i0 ON t0(c1, c1 + 1 DESC);", "INSERT INTO t0(c0) VALUES (1);", "SELECT MIN(t0.c1), t0.c0 FROM t0 WHERE t0.c1 ISNULL; -- expected: NULL | 1, actual: NULL | NULL"]}
{"index": 1038, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0, c1 TEXT);", "CREATE VIEW v0(c0) AS SELECT SUM(t0.c1) FROM t0;", "INSERT INTO t0(c0, c1) VALUES ('a', 1);", "SELECT * FROM v0, t0 WHERE t0.c1 <= v0.c0; -- unexpected: row is not fetched"]}
{"index": 1039, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT, c1);", "INSERT INTO t0(c0, c1) VALUES (-1, 0);", "CREATE VIEW v0(c0, c1) AS SELECT t0.c0, AVG(t0.c1) FROM t0;", "SELECT * FROM v0 WHERE v0.c1 < v0.c0; -- unexpected: row is not fetched"]}
{"index": 1040, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT);", "CREATE VIEW v0(c0) AS SELECT t0.c0 FROM t0;", "INSERT INTO t0(c0) VALUES ('0');", "SELECT 0 IN (c0) FROM v0; -- expected: 0, actual: 1"]}
{"index": 1044, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0);", "CREATE VIEW v0(c0) AS SELECT TYPEOF(1) FROM t0;", "INSERT INTO t0(c0) VALUES (0), (1);", "SELECT * FROM t0 LEFT JOIN v0 ON t0.c0 WHERE NOT(v0.c0 = 'a'); -- unexpected: fetches no row"]}
{"index": 1045, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0);", "CREATE VIEW v0(c0) AS SELECT LOWER(CAST('1e500' AS TEXT)) FROM t0;", "INSERT INTO t0(c0) VALUES (NULL);", "SELECT v0.c0 FROM v0, t0 WHERE t0.rowid NOT IN (0, 0, v0.c0); -- expected: '1e500', actual: Inf"]}
{"index": 1047, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INTEGER PRIMARY KEY, c1 TEXT);", "INSERT INTO t0(c0, c1) VALUES (1, 'a');", "SELECT * FROM t0 WHERE '-1' BETWEEN 0 AND t0.c0; -- expected: 1|a, actual: no row is fetched"]}
{"index": 1048, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT UNIQUE, c1);", "INSERT INTO t0(c0) VALUES (-1);", "SELECT * FROM t0 WHERE - x'ce' >= t0.c0; -- unexpected: row is not fetched"]}
{"index": 1049, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0 (c0);", "INSERT INTO t0(c0) VALUES ('a');", "SELECT * FROM t0 WHERE LIKELY(t0.rowid) <= '0'; -- unexpected: row is not fetched"]}
{"index": 1050, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT UNIQUE);", "INSERT INTO t0(c0) VALUES (1);", "SELECT * FROM t0 WHERE '1' IN (t0.c0); -- unexpected: fetches row"]}
{"index": 1051, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0);", "INSERT INTO t0(c0) VALUES (NULL);", "CREATE INDEX i0 ON t0(1) WHERE c0 NOT NULL;", "SELECT * FROM t0 WHERE (t0.c0 IS FALSE) IS FALSE; -- unexpected: row is not fetched"]}
{"index": 1052, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c1);", "CREATE INDEX i0 ON t0(1) WHERE c1 NOTNULL;", "INSERT INTO t0(c1) VALUES (NULL);", "SELECT * FROM t0 WHERE t0.c1 IS FALSE BETWEEN FALSE AND TRUE; -- unexpected: row is not fetched"]}
{"index": 1053, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0 (c0);", "CREATE INDEX i0 ON t0(1) WHERE c0 NOT NULL;", "INSERT INTO t0(c0) VALUES (NULL);", "SELECT * FROM t0 WHERE '' BETWEEN t0.c0 AND 1 IN (FALSE); -- unexpected: row is not fetched"]}
{"index": 1054, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 REAL, c1 TEXT);", "CREATE INDEX i0 ON t0(+c0, c0);", "INSERT INTO t0(c0) VALUES(0);", "SELECT CAST(+ t0.c0 AS BLOB) LIKE 0 FROM t0; -- expected: 0, actual: 1"]}
{"index": 1055, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 REAL UNIQUE);", "INSERT INTO t0(c0) VALUES(2.07093491255203046E18);", "SELECT * FROM t0 WHERE c0 IN ('2070934912552030444'); -- unexpected: row is fetched"]}
{"index": 1057, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 COLLATE NOCASE, c1);", "CREATE INDEX i0 ON t0(0) WHERE c0 >= c1;", "REPLACE INTO t0 VALUES('a', 'B');", "SELECT * FROM t0 WHERE t0.c1 <= t0.c0; -- unexpected: row is not fetched"]}
{"index": 1059, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 COLLATE NOCASE);", "INSERT INTO t0(c0) VALUES ('B');", "CREATE VIEW v0(c0, c1) AS SELECT DISTINCT t0.c0, 'a' FROM t0;", "SELECT v0.c1 >= v0.c0 FROM v0; -- actual: 1, expected: 0"]}
{"index": 1060, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 UNIQUE);", "INSERT INTO t0 VALUES (-1);", "SELECT * FROM t0 WHERE t0.c0 GLOB '-*'; -- unexpected: row is not fetched"]}
{"index": 1061, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 PRIMARY KEY, c1);", "INSERT INTO t0(c0) VALUES (x'bb'), (0);", "SELECT COUNT(*) FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- 1", "SELECT * FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1; -- no row is fetched"]}
{"index": 1062, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0);", "INSERT INTO t0(c0) VALUES (0);", "CREATE VIEW v0(c0) AS SELECT t0.rowid FROM t0 ORDER BY 1;", "SELECT COUNT(*) FROM v0 WHERE ABS('1') = v0.c0; -- expected: 1, actual: 0"]}
{"index": 1067, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT PRIMARY KEY);", "INSERT INTO t0(c0) VALUES ('');", "SELECT * FROM t0 WHERE (t0.c0, TRUE) > (CAST('' AS REAL), FALSE); -- unexpected: row is not fetched"]}
{"index": 1068, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 UNIQUE);", "INSERT INTO t0(c0) VALUES('a');", "SELECT * FROM t0 WHERE (t0.c0, 0) < ('B' COLLATE NOCASE, 0); -- unexpected: row is not fetched"]}
{"index": 1072, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0 (c0 GENERATED ALWAYS AS (1), c1 UNIQUE, c2 UNIQUE);", "INSERT INTO t0(c1) VALUES (1);", "SELECT * FROM t0 WHERE 0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1; -- unexpected: row is fetched"]}
{"index": 1074, "a_db": "postgres", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 CHAR(2) COLLATE \"C\", c1 CHAR(2) COLLATE \"POSIX\");", "INSERT INTO t0 VALUES('', '');", "SELECT * FROM t0 WHERE t0.c1 NOT IN (t0.c0); -- unexpected: cache lookup failed for collation 0"]}
{"index": 1075, "a_db": "postgres", "b_db": "cockroachdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 CHAR(2) COLLATE \"C\", c1 CHAR(2) COLLATE \"POSIX\");", "INSERT INTO t0 VALUES('', '');", "SELECT * FROM t0 WHERE t0.c1 NOT IN (t0.c0); -- unexpected: cache lookup failed for collation 0"]}
{"index": 1076, "a_db": "postgres", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT);", "CREATE INDEX i0 ON t0(c0 bpchar_ops);", "SELECT * FROM t0 WHERE t0.c0 LIKE ''; -- ERROR:  no = operator for opfamily 426"]}
{"index": 1077, "a_db": "postgres", "b_db": "cockroachdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 TEXT);", "CREATE INDEX i0 ON t0(c0 bpchar_ops);", "SELECT * FROM t0 WHERE t0.c0 LIKE ''; -- ERROR:  no = operator for opfamily 426"]}
{"index": 1082, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 AS (1), c1);", "CREATE TABLE t1(c0);", "SELECT * FROM t0, t1 WHERE t0.c0 == 0; -- out of memory"]}
{"index": 1083, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0);", "CREATE VIRTUAL TABLE vt0 USING rtree(c0, c1, c2);", "INSERT INTO t0(c0) VALUES(0);", "SELECT * FROM t0 LEFT JOIN vt0 ON c2 IN (0) WHERE c1 IN (NULL);"]}
{"index": 1084, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0);", "CREATE TABLE t1(c0, c1 AS(1));", "INSERT INTO t0 VALUES(0);", "SELECT t1.c1 IS TRUE FROM t0 LEFT JOIN t1; -- expected: 0, actual: 1"]}
{"index": 1085, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0);", "CREATE TABLE t1(c0, c1 UNIQUE);", "INSERT INTO t0(c0) VALUES(NULL);", "SELECT COUNT(*) FROM t0, t1 WHERE (SELECT AVG(0) FILTER(WHERE t1.c1)); -- segmentation fault"]}
{"index": 1086, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 REAL AS(1) UNIQUE, c1 INT);", "INSERT INTO t0 VALUES('');", "SELECT * FROM t0 WHERE (1 BETWEEN CAST(t0.c0 AS TEXT) AND t0.c0); -- unexpected: row is fetched"]}
{"index": 1088, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 UNIQUE);", "SELECT * FROM t0 WHERE(c0, 0) IN(SELECT FIRST_VALUE(0) OVER(), 0); -- Segmentation fault"]}
{"index": 1094, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0);", "INSERT INTO t0 VALUES('0');", "CREATE VIEW v0(c0) AS SELECT CAST(0 AS INT) FROM t0;", "SELECT * FROM t0, v0 WHERE 0 >= t0.c0 AND t0.c0 = v0.c0; -- unexpected: fetches row"]}
{"index": 1095, "a_db": "sqlite", "b_db": "duckdb", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 REAL, c1 REAL GENERATED ALWAYS AS (c0));", "INSERT INTO t0(c0) VALUES (1);", "SELECT * FROM t0 GROUP BY c0; -- expected: 1.0|1.0, actual: 1.0|1", "SELECT * FROM t0; -- 1.0|1.0"]}
{"index": 1098, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "INSERT INTO t0(c0) VALUES (0);", "SELECT * FROM t0 WHERE NOT(NULL OR TRUE); -- expected: {}, actual: {1}"]}
{"index": 1099, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "INSERT INTO t0(c0) VALUES (NULL);", "SELECT * FROM t0 WHERE c0 = c0; -- expected: {}, actual: {NULL}"]}
{"index": 1100, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 NUMERIC UNIQUE);", "INSERT INTO t0(c0) VALUES (1163404482), (0), (488566);", "SELECT * FROM t0 WHERE 0.1 < c0; -- expected: {}, actual: {1163404482.0, 488566.0}"]}
{"index": 1103, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "CREATE TABLE t1(c0 INT);", "SELECT * FROM t0 RIGHT JOIN t1 ON t0.c0!=t1.c0; -- Error: Unhandled type for empty NL join"]}
{"index": 1104, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "CREATE TABLE t1(c1 BOOLEAN);", "INSERT INTO t0(c0) VALUES (1);", "SELECT * FROM t0 RIGHT JOIN t1 on true; -- expected: {}, actual: {1|false}"]}
{"index": 1107, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "INSERT INTO t0(c0) VALUES (-10);", "SELECT * FROM t0 WHERE t0.c0 NOT SIMILAR TO 0; -- expected: {-10}, actual: {}"]}
{"index": 1116, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 VARCHAR);", "INSERT INTO t0(c0) VALUES (0.1);", "SELECT * FROM t0 WHERE REGEXP_MATCHES(t0.c0, '1'); -- expected: {0.1}, actual: {}"]}
{"index": 1117, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 DATE);", "INSERT INTO t0 VALUES (-10000000);", "SELECT c0 FROM t0; -- double free or corruption (out)"]}
{"index": 1118, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 REAL);", "INSERT INTO t0(c0) VALUES (10000000000);", "SELECT t0.c0 ::INT FROM t0; -- Error: Conversion: Invalid TypeId -1"]}
{"index": 1122, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "CREATE VIEW v0 AS SELECT 0, 1 FROM t0 ORDER BY t0.c0;", "SELECT t0.c0 FROM t0, v0; -- Conversion: Invalid TypeId <int>"]}
{"index": 1123, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 BIGINT);", "INSERT INTO t0(c0) VALUES (-1);", "INSERT INTO t0(c0) VALUES (0);", "SELECT * FROM t0 WHERE t0.c0 AND (t0.c0<<64);-- expected: {}, actual: {-1}"]}
{"index": 1125, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c1 BIGINT);", "INSERT INTO t0(c1) VALUES (2);", "INSERT INTO t0(c1) VALUES (9223372036854775807);", "SELECT SUM(t0.c1) FROM t0; -- expected: {9223372036854776000}, actual: {-9223372036854775807}"]}
{"index": 1126, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "INSERT INTO t0(c0) VALUES (0);", "CREATE VIEW v0(c0) AS SELECT 1 FROM t0;", "SELECT * FROM v0 ORDER BY 'a'; --  Assertion `types.size() > 0' failed (original test case crashed)"]}
{"index": 1127, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "INSERT INTO t0 VALUES (0);", "SELECT * FROM t0 WHERE t0.c0 SIMILAR TO '.'; -- Assertion `strlen(dataptr) == length' failed"]}
{"index": 1130, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0 (c0 INT);", "INSERT INTO t0 VALUES (0);", "SELECT SUM(-1) FROM t0; -- expected: {-1}, actual: {1.8446744073709552e+19}"]}
{"index": 1132, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "INSERT INTO t0 VALUES (-1);", "SELECT t0.c0 FROM t0 WHERE NOT (0 BETWEEN 0 AND t0.c0::BOOL); -- expected: {}, actual: {-1}"]}
{"index": 1133, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 VARCHAR);", "SELECT * FROM t0 WHERE PREFIX(t0.c0, ''); -- Error: std::bad_alloc"]}
{"index": 1134, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 VARCHAR, c1 VARCHAR);", "INSERT INTO t0(c0) VALUES(0), ('');", "UPDATE t0 SET c1 = 1;", "SELECT t0.c1 FROM t0 WHERE '' = t0.c0; -- expected: {1}, actual: {''}"]}
{"index": 1135, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 BOOLEAN);", "INSERT INTO t0 VALUES (NULL), (false);", "SELECT DISTINCT t0.c0 FROM t0; -- expected: {NULL, false}, actual: {NULL, NULL}"]}
{"index": 1138, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INTEGER);", "INSERT INTO t0(c0) VALUES (-2);", "SELECT t0.c0 FROM t0 WHERE -1 BETWEEN t0.c0::VARCHAR AND 1; -- expected: {-2}, actual: {}"]}
{"index": 1139, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 VARCHAR);", "INSERT INTO t0(c0) VALUES (''), (0);", "SELECT * FROM t0 WHERE t0.c0 = ''; -- expected: {''}, actual: {}"]}
{"index": 1141, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 VARCHAR);", "INSERT INTO t0(c0) VALUES (DATE '2000-01-02');", "SELECT * FROM t0 WHERE DATE '2000-01-01' < t0.c0; -- expected: {2000-01-02}, actual: {}"]}
{"index": 1143, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 DOUBLE);", "INSERT INTO t0(c0) VALUES(1E200), (0);", "SELECT STDDEV_POP(c0) FROM t0; -- unexpected: does not fetch a row"]}
{"index": 1144, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 VARCHAR COLLATE NOCASE);", "INSERT INTO t0(c0) VALUES ('a'), ('A');", "SELECT t0.c0 FROM t0 GROUP BY t0.c0; -- expected: {'a'} or {'A'}, actual: {'a', 'A'}"]}
{"index": 1145, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT);", "INSERT INTO t0 VALUES (-1);", "SELECT MIN(CAST(c0 AS BIGINT) << 63) FROM t0; -- expected: {-9223372036854775808}, actual: {NULL}"]}
{"index": 1146, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 INT UNIQUE, c1 DATE);", "ALTER TABLE t0 ALTER c1 TYPE INT;", "INSERT INTO t0(c0) VALUES(-1);", "SELECT * FROM t0 WHERE c0 < 0; -- Segmentation fault"]}
{"index": 1147, "a_db": "duckdb", "b_db": "postgres", "molt": "norec", "sqls": ["CREATE TABLE t0(c0 BOOL);", "INSERT INTO t0(c0) VALUES (NULL);", "SELECT * FROM t0 WHERE LEFT(t0.c0, -1); -- Segmentation fault"]}
