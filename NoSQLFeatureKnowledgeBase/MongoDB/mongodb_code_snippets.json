[
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/ https:/www.mongodb.com/products",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/core/databases-and-collections/",
        "description": "",
        "code": "use myNewDBdb.myNewCollection1.insertOne( { x: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/core/databases-and-collections/",
        "description": "",
        "code": "db.myNewCollection2.insertOne( { x: 1 } )db.myNewCollection3.createIndex( { y: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "db.inventory.insertOne(   { item: \"canvas\", qty: 100, tags: [\"cotton\"], size: { h: 28, w: 35.5, uom: \"cm\" } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "await db.inventory.insert_one(    {        \"item\": \"canvas\",        \"qty\": 100,        \"tags\": [\"cotton\"],        \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"},    })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "await db.collection('inventory').insertOne({  item: 'canvas',  qty: 100,  tags: ['cotton'],  size: { h: 28, w: 35.5, uom: 'cm' }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "db.inventory.insert_one(    {        \"item\": \"canvas\",        \"qty\": 100,        \"tags\": [\"cotton\"],        \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"},    })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "db.inventory.find( { item: \"canvas\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": \"canvas\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ item: 'canvas' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": \"canvas\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, tags: [\"blank\", \"red\"], size: { h: 14, w: 21, uom: \"cm\" } },   { item: \"mat\", qty: 85, tags: [\"gray\"], size: { h: 27.9, w: 35.5, uom: \"cm\" } },   { item: \"mousepad\", qty: 25, tags: [\"gel\", \"blue\"], size: { h: 19, w: 22.85, uom: \"cm\" } }])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"tags\": [\"blank\", \"red\"],            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},        },        {            \"item\": \"mat\",            \"qty\": 85,            \"tags\": [\"gray\"],            \"size\": {\"h\": 27.9, \"w\": 35.5, \"uom\": \"cm\"},        },        {            \"item\": \"mousepad\",            \"qty\": 25,            \"tags\": [\"gel\", \"blue\"],            \"size\": {\"h\": 19, \"w\": 22.85, \"uom\": \"cm\"},        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    tags: ['blank', 'red'],    size: { h: 14, w: 21, uom: 'cm' }  },  {    item: 'mat',    qty: 85,    tags: ['gray'],    size: { h: 27.9, w: 35.5, uom: 'cm' }  },  {    item: 'mousepad',    qty: 25,    tags: ['gel', 'blue'],    size: { h: 19, w: 22.85, uom: 'cm' }  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"tags\": [\"blank\", \"red\"],            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},        },        {            \"item\": \"mat\",            \"qty\": 85,            \"tags\": [\"gray\"],            \"size\": {\"h\": 27.9, \"w\": 35.5, \"uom\": \"cm\"},        },        {            \"item\": \"mousepad\",            \"qty\": 25,            \"tags\": [\"gel\", \"blue\"],            \"size\": {\"h\": 19, \"w\": 22.85, \"uom\": \"cm\"},        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "db.inventory.insertMany( [   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "# Subdocument key order matters in a few of these examples so we have# to use bson.son.SON instead of a Python dict.from bson.son import SONawait db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")]),            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": SON([(\"h\", 22.85), (\"w\", 30), (\"uom\", \"cm\")]),            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": SON([(\"h\", 10), (\"w\", 15.25), (\"uom\", \"cm\")]),            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "db.inventory.find( { \"size.uom\": \"in\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size.uom\": \"in\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  'size.uom': 'in'});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size.uom\": \"in\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "db.inventory.find( { \"size.h\": { $lt: 15 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size.h\": {\"$lt\": 15}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  'size.h': { $lt: 15 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size.h\": {\"$lt\": 15}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "db.inventory.find( { \"size.h\": { $lt: 15 }, \"size.uom\": \"in\", status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size.h\": {\"$lt\": 15}, \"size.uom\": \"in\", \"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  'size.h': { $lt: 15 },  'size.uom': 'in',  status: 'D'});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size.h\": {\"$lt\": 15}, \"size.uom\": \"in\", \"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "db.inventory.find( { size: { h: 14, w: 21, uom: \"cm\" } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")])})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  size: { h: 14, w: 21, uom: 'cm' }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "db.inventory.find(  { size: { w: 21, h: 14, uom: \"cm\" } }  )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size\": SON([(\"w\", 21), (\"h\", 14), (\"uom\", \"cm\")])})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  size: { w: 21, h: 14, uom: 'cm' }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"size\": {\"w\": 21, \"h\": 14, \"uom\": \"cm\"}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, tags: [\"blank\", \"red\"], dim_cm: [ 14, 21 ] },   { item: \"notebook\", qty: 50, tags: [\"red\", \"blank\"], dim_cm: [ 14, 21 ] },   { item: \"paper\", qty: 100, tags: [\"red\", \"blank\", \"plain\"], dim_cm: [ 14, 21 ] },   { item: \"planner\", qty: 75, tags: [\"blank\", \"red\"], dim_cm: [ 22.85, 30 ] },   { item: \"postcard\", qty: 45, tags: [\"blue\"], dim_cm: [ 10, 15.25 ] }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {\"item\": \"journal\", \"qty\": 25, \"tags\": [\"blank\", \"red\"], \"dim_cm\": [14, 21]},        {\"item\": \"notebook\", \"qty\": 50, \"tags\": [\"red\", \"blank\"], \"dim_cm\": [14, 21]},        {            \"item\": \"paper\",            \"qty\": 100,            \"tags\": [\"red\", \"blank\", \"plain\"],            \"dim_cm\": [14, 21],        },        {\"item\": \"planner\", \"qty\": 75, \"tags\": [\"blank\", \"red\"], \"dim_cm\": [22.85, 30]},        {\"item\": \"postcard\", \"qty\": 45, \"tags\": [\"blue\"], \"dim_cm\": [10, 15.25]},    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    tags: ['blank', 'red'],    dim_cm: [14, 21]  },  {    item: 'notebook',    qty: 50,    tags: ['red', 'blank'],    dim_cm: [14, 21]  },  {    item: 'paper',    qty: 100,    tags: ['red', 'blank', 'plain'],    dim_cm: [14, 21]  },  {    item: 'planner',    qty: 75,    tags: ['blank', 'red'],    dim_cm: [22.85, 30]  },  {    item: 'postcard',    qty: 45,    tags: ['blue'],    dim_cm: [10, 15.25]  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.insert_many(    [        {\"item\": \"journal\", \"qty\": 25, \"tags\": [\"blank\", \"red\"], \"dim_cm\": [14, 21]},        {\"item\": \"notebook\", \"qty\": 50, \"tags\": [\"red\", \"blank\"], \"dim_cm\": [14, 21]},        {            \"item\": \"paper\",            \"qty\": 100,            \"tags\": [\"red\", \"blank\", \"plain\"],            \"dim_cm\": [14, 21],        },        {\"item\": \"planner\", \"qty\": 75, \"tags\": [\"blank\", \"red\"], \"dim_cm\": [22.85, 30]},        {\"item\": \"postcard\", \"qty\": 45, \"tags\": [\"blue\"], \"dim_cm\": [10, 15.25]},    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.find( { tags: [\"red\", \"blank\"] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"tags\": [\"red\", \"blank\"]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  tags: ['red', 'blank']});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"tags\": [\"red\", \"blank\"]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.find( { tags: { $all: [\"red\", \"blank\"] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"tags\": {\"$all\": [\"red\", \"blank\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  tags: { $all: ['red', 'blank'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"tags\": {\"$all\": [\"red\", \"blank\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.find( { tags: \"red\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"tags\": \"red\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  tags: 'red'});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"tags\": \"red\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.find( { dim_cm: { $gt: 25 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"dim_cm\": {\"$gt\": 25}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  dim_cm: { $gt: 25 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"dim_cm\": {\"$gt\": 25}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.find( { dim_cm: { $gt: 15, $lt: 20 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"dim_cm\": {\"$gt\": 15, \"$lt\": 20}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  dim_cm: { $gt: 15, $lt: 20 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"dim_cm\": {\"$gt\": 15, \"$lt\": 20}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.find( { dim_cm: { $elemMatch: { $gt: 22, $lt: 30 } } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"dim_cm\": {\"$elemMatch\": {\"$gt\": 22, \"$lt\": 30}}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  dim_cm: { $elemMatch: { $gt: 22, $lt: 30 } }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"dim_cm\": {\"$elemMatch\": {\"$gt\": 22, \"$lt\": 30}}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.find( { \"dim_cm.1\": { $gt: 25 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"dim_cm.1\": {\"$gt\": 25}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  'dim_cm.1': { $gt: 25 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"dim_cm.1\": {\"$gt\": 25}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "db.inventory.find( { \"tags\": { $size: 3 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"tags\": {\"$size\": 3}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  tags: { $size: 3 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-arrays/",
        "description": "",
        "code": "cursor = db.inventory.find({\"tags\": {\"$size\": 3}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.insertMany( [   { item: \"journal\", instock: [ { warehouse: \"A\", qty: 5 }, { warehouse: \"C\", qty: 15 } ] },   { item: \"notebook\", instock: [ { warehouse: \"C\", qty: 5 } ] },   { item: \"paper\", instock: [ { warehouse: \"A\", qty: 60 }, { warehouse: \"B\", qty: 15 } ] },   { item: \"planner\", instock: [ { warehouse: \"A\", qty: 40 }, { warehouse: \"B\", qty: 5 } ] },   { item: \"postcard\", instock: [ { warehouse: \"B\", qty: 15 }, { warehouse: \"C\", qty: 35 } ] }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "# Subdocument key order matters in a few of these examples so we have# to use bson.son.SON instead of a Python dict.from bson.son import SONawait db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"instock\": [                SON([(\"warehouse\", \"A\"), (\"qty\", 5)]),                SON([(\"warehouse\", \"C\"), (\"qty\", 15)]),            ],        },        {\"item\": \"notebook\", \"instock\": [SON([(\"warehouse\", \"C\"), (\"qty\", 5)])]},        {            \"item\": \"paper\",            \"instock\": [                SON([(\"warehouse\", \"A\"), (\"qty\", 60)]),                SON([(\"warehouse\", \"B\"), (\"qty\", 15)]),            ],        },        {            \"item\": \"planner\",            \"instock\": [                SON([(\"warehouse\", \"A\"), (\"qty\", 40)]),                SON([(\"warehouse\", \"B\"), (\"qty\", 5)]),            ],        },        {            \"item\": \"postcard\",            \"instock\": [                SON([(\"warehouse\", \"B\"), (\"qty\", 15)]),                SON([(\"warehouse\", \"C\"), (\"qty\", 35)]),            ],        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    instock: [      { warehouse: 'A', qty: 5 },      { warehouse: 'C', qty: 15 }    ]  },  {    item: 'notebook',    instock: [{ warehouse: 'C', qty: 5 }]  },  {    item: 'paper',    instock: [      { warehouse: 'A', qty: 60 },      { warehouse: 'B', qty: 15 }    ]  },  {    item: 'planner',    instock: [      { warehouse: 'A', qty: 40 },      { warehouse: 'B', qty: 5 }    ]  },  {    item: 'postcard',    instock: [      { warehouse: 'B', qty: 15 },      { warehouse: 'C', qty: 35 }    ]  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"instock\": [                {\"warehouse\": \"A\", \"qty\": 5},                {\"warehouse\": \"C\", \"qty\": 15},            ],        },        {\"item\": \"notebook\", \"instock\": [{\"warehouse\": \"C\", \"qty\": 5}]},        {            \"item\": \"paper\",            \"instock\": [                {\"warehouse\": \"A\", \"qty\": 60},                {\"warehouse\": \"B\", \"qty\": 15},            ],        },        {            \"item\": \"planner\",            \"instock\": [                {\"warehouse\": \"A\", \"qty\": 40},                {\"warehouse\": \"B\", \"qty\": 5},            ],        },        {            \"item\": \"postcard\",            \"instock\": [                {\"warehouse\": \"B\", \"qty\": 15},                {\"warehouse\": \"C\", \"qty\": 35},            ],        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.find( { \"instock\": { warehouse: \"A\", qty: 5 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock\": SON([(\"warehouse\", \"A\"), (\"qty\", 5)])})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  instock: { warehouse: 'A', qty: 5 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock\": {\"warehouse\": \"A\", \"qty\": 5}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.find( { \"instock\": { qty: 5, warehouse: \"A\" } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock\": SON([(\"qty\", 5), (\"warehouse\", \"A\")])})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  instock: { qty: 5, warehouse: 'A' }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock\": {\"qty\": 5, \"warehouse\": \"A\"}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.find( { 'instock.qty': { $lte: 20 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock.qty\": {\"$lte\": 20}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  'instock.qty': { $lte: 20 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock.qty\": {\"$lte\": 20}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.find( { 'instock.0.qty': { $lte: 20 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock.0.qty\": {\"$lte\": 20}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  'instock.0.qty': { $lte: 20 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock.0.qty\": {\"$lte\": 20}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.find( { \"instock\": { $elemMatch: { qty: 5, warehouse: \"A\" } } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock\": {\"$elemMatch\": {\"qty\": 5, \"warehouse\": \"A\"}}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  instock: { $elemMatch: { qty: 5, warehouse: 'A' } }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock\": {\"$elemMatch\": {\"qty\": 5, \"warehouse\": \"A\"}}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.find( { \"instock\": { $elemMatch: { qty: { $gt: 10, $lte: 20 } } } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock\": {\"$elemMatch\": {\"qty\": {\"$gt\": 10, \"$lte\": 20}}}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  instock: { $elemMatch: { qty: { $gt: 10, $lte: 20 } } }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock\": {\"$elemMatch\": {\"qty\": {\"$gt\": 10, \"$lte\": 20}}}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.find( { \"instock.qty\": { $gt: 10,  $lte: 20 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock.qty\": {\"$gt\": 10, \"$lte\": 20}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  'instock.qty': { $gt: 10, $lte: 20 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock.qty\": {\"$gt\": 10, \"$lte\": 20}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "db.inventory.find( { \"instock.qty\": 5, \"instock.warehouse\": \"A\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock.qty\": 5, \"instock.warehouse\": \"A\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  'instock.qty': 5,  'instock.warehouse': 'A'});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-array-of-documents/",
        "description": "",
        "code": "cursor = db.inventory.find({\"instock.qty\": 5, \"instock.warehouse\": \"A\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.insertMany( [  { item: \"journal\", status: \"A\", size: { h: 14, w: 21, uom: \"cm\" }, instock: [ { warehouse: \"A\", qty: 5 } ] },  { item: \"notebook\", status: \"A\",  size: { h: 8.5, w: 11, uom: \"in\" }, instock: [ { warehouse: \"C\", qty: 5 } ] },  { item: \"paper\", status: \"D\", size: { h: 8.5, w: 11, uom: \"in\" }, instock: [ { warehouse: \"A\", qty: 60 } ] },  { item: \"planner\", status: \"D\", size: { h: 22.85, w: 30, uom: \"cm\" }, instock: [ { warehouse: \"A\", qty: 40 } ] },  { item: \"postcard\", status: \"A\", size: { h: 10, w: 15.25, uom: \"cm\" }, instock: [ { warehouse: \"B\", qty: 15 }, { warehouse: \"C\", qty: 35 } ] }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"status\": \"A\",            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"instock\": [{\"warehouse\": \"A\", \"qty\": 5}],        },        {            \"item\": \"notebook\",            \"status\": \"A\",            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"instock\": [{\"warehouse\": \"C\", \"qty\": 5}],        },        {            \"item\": \"paper\",            \"status\": \"D\",            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"instock\": [{\"warehouse\": \"A\", \"qty\": 60}],        },        {            \"item\": \"planner\",            \"status\": \"D\",            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"instock\": [{\"warehouse\": \"A\", \"qty\": 40}],        },        {            \"item\": \"postcard\",            \"status\": \"A\",            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"instock\": [{\"warehouse\": \"B\", \"qty\": 15}, {\"warehouse\": \"C\", \"qty\": 35}],        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    status: 'A',    size: { h: 14, w: 21, uom: 'cm' },    instock: [{ warehouse: 'A', qty: 5 }]  },  {    item: 'notebook',    status: 'A',    size: { h: 8.5, w: 11, uom: 'in' },    instock: [{ warehouse: 'C', qty: 5 }]  },  {    item: 'paper',    status: 'D',    size: { h: 8.5, w: 11, uom: 'in' },    instock: [{ warehouse: 'A', qty: 60 }]  },  {    item: 'planner',    status: 'D',    size: { h: 22.85, w: 30, uom: 'cm' },    instock: [{ warehouse: 'A', qty: 40 }]  },  {    item: 'postcard',    status: 'A',    size: { h: 10, w: 15.25, uom: 'cm' },    instock: [      { warehouse: 'B', qty: 15 },      { warehouse: 'C', qty: 35 }    ]  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"status\": \"A\",            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"instock\": [{\"warehouse\": \"A\", \"qty\": 5}],        },        {            \"item\": \"notebook\",            \"status\": \"A\",            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"instock\": [{\"warehouse\": \"C\", \"qty\": 5}],        },        {            \"item\": \"paper\",            \"status\": \"D\",            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"instock\": [{\"warehouse\": \"A\", \"qty\": 60}],        },        {            \"item\": \"planner\",            \"status\": \"D\",            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"instock\": [{\"warehouse\": \"A\", \"qty\": 40}],        },        {            \"item\": \"postcard\",            \"status\": \"A\",            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"instock\": [{\"warehouse\": \"B\", \"qty\": 15}, {\"warehouse\": \"C\", \"qty\": 35}],        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A'});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"item\": 1, \"status\": 1})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"item\": 1, \"status\": 1})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, _id: 0 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"_id\": 0})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"_id\": 0})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { status: 0, instock: 0 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"status\": 0, \"instock\": 0})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"status\": 0, \"instock\": 0})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find(   { status: \"A\" },   { item: 1, status: 1, \"size.uom\": 1 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"size.uom\": 1})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"size.uom\": 1})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find(   { status: \"A\" },   { \"size.uom\": 0 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"size.uom\": 0})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"size.uom\": 0})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, \"instock.qty\": 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock.qty\": 1})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock.qty\": 1})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1, instock: { $slice: -1 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\"}, {\"item\": 1, \"status\": 1, \"instock\": {\"$slice\": -1}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/",
        "description": "",
        "code": "db.inventory.find(   { },   {      _id: 0,      item: 1,      status: {         $switch: {            branches: [               {                  case: { $eq: [ \"$status\", \"A\" ] },                  then: \"Available\"               },               {                  case: { $eq: [ \"$status\", \"D\" ] },                  then: \"Discontinued\"               },            ],            default: \"No status found\"         }      },      area: {         $concat: [            { $toString: { $multiply: [ \"$size.h\", \"$size.w\" ] } },            \" \",            \"$size.uom\"         ]      },      reportNumber: { $literal: 1 }   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "db.inventory.insertMany([   { _id: 1, item: null },   { _id: 2 }])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "await db.inventory.insert_many([{\"_id\": 1, \"item\": None}, {\"_id\": 2}])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "await db.collection('inventory').insertMany([{ _id: 1, item: null }, { _id: 2 }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "db.inventory.insert_many([{\"_id\": 1, \"item\": None}, {\"_id\": 2}])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "db.inventory.find( { item: null } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": None})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  item: null});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": None})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "db.inventory.find( { item: { $ne : null } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "db.inventory.find( { item: { $ne : null} } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "cursor = db.inventory.find( { \"item\": { \"$ne\": None } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "const cursor = db.collection('inventory')  .find({ item: { $ne : null }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "cursor = db.inventory.find( { \"item\": { \"$ne\": None } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "db.inventory.find( { item : { $type: 10 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": {\"$type\": 10}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  item: { $type: 10 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": {\"$type\": 10}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "db.inventory.find( { item : { $exists: false } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": {\"$exists\": False}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  item: { $exists: false }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-for-null-fields/",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": {\"$exists\": False}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/long-running-queries/",
        "description": "",
        "code": "mongoc_client_session_t *cs = NULL;mongoc_collection_t *cats_collection = NULL;mongoc_collection_t *dogs_collection = NULL;int64_t adoptable_pets_count = 0;bson_error_t error;mongoc_session_opt_t *session_opts;cats_collection = mongoc_client_get_collection(client, \"pets\", \"cats\");dogs_collection = mongoc_client_get_collection(client, \"pets\", \"dogs\");/* Seed 'pets.cats' and 'pets.dogs' with example data */if (!pet_setup(cats_collection, dogs_collection)) {   goto cleanup;}/* start a snapshot session */session_opts = mongoc_session_opts_new();mongoc_session_opts_set_snapshot(session_opts, true);cs = mongoc_client_start_session(client, session_opts, &error);mongoc_session_opts_destroy(session_opts);if (!cs) {   MONGOC_ERROR(\"Could not start session: %s\", error.message);   goto cleanup;}/* * Perform the following aggregation pipeline, and accumulate the count in * `adoptable_pets_count`. * *  adoptablePetsCount = db.cats.aggregate( *      [ { \"$match\": { \"adoptable\": true } }, *        { \"$count\": \"adoptableCatsCount\" } ], session=s *  ).next()[\"adoptableCatsCount\"] * *  adoptablePetsCount += db.dogs.aggregate( *      [ { \"$match\": { \"adoptable\": True} }, *        { \"$count\": \"adoptableDogsCount\" } ], session=s *  ).next()[\"adoptableDogsCount\"] * * Remember in order to apply the client session to * this operation, you must append the client session to the options passed * to `mongoc_collection_aggregate`, i.e., * * mongoc_client_session_append (cs, &opts, &error); * cursor = mongoc_collection_aggregate ( *    collection, MONGOC_QUERY_NONE, pipeline, &opts, NULL); */accumulate_adoptable_count(cs, cats_collection, &adoptable_pets_count);accumulate_adoptable_count(cs, dogs_collection, &adoptable_pets_count);printf(\"there are %\" PRId64 \" adoptable pets\\n\", adoptable_pets_count);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/long-running-queries/",
        "description": "",
        "code": "ctx := context.TODO()sess, err := client.StartSession(options.Session().SetSnapshot(true))if err != nil {\treturn err}defer sess.EndSession(ctx)var adoptablePetsCount int32err = mongo.WithSession(ctx, sess, func(ctx context.Context) error {\t// Count the adoptable cats\tconst adoptableCatsOutput = \"adoptableCatsCount\"\tcursor, err := db.Collection(\"cats\").Aggregate(ctx, mongo.Pipeline{\t\tbson.D{{\"$match\", bson.D{{\"adoptable\", true}}}},\t\tbson.D{{\"$count\", adoptableCatsOutput}},\t})\tif err != nil {\t\treturn err\t}\tif !cursor.Next(ctx) {\t\treturn fmt.Errorf(\"expected aggregate to return a document, but got none\")\t}\tresp := cursor.Current.Lookup(adoptableCatsOutput)\tadoptableCatsCount, ok := resp.Int32OK()\tif !ok {\t\treturn fmt.Errorf(\"failed to find int32 field %q in document %v\", adoptableCatsOutput, cursor.Current)\t}\tadoptablePetsCount += adoptableCatsCount\t// Count the adoptable dogs\tconst adoptableDogsOutput = \"adoptableDogsCount\"\tcursor, err = db.Collection(\"dogs\").Aggregate(ctx, mongo.Pipeline{\t\tbson.D{{\"$match\", bson.D{{\"adoptable\", true}}}},\t\tbson.D{{\"$count\", adoptableDogsOutput}},\t})\tif err != nil {\t\treturn err\t}\tif !cursor.Next(ctx) {\t\treturn fmt.Errorf(\"expected aggregate to return a document, but got none\")\t}\tresp = cursor.Current.Lookup(adoptableDogsOutput)\tadoptableDogsCount, ok := resp.Int32OK()\tif !ok {\t\treturn fmt.Errorf(\"failed to find int32 field %q in document %v\", adoptableDogsOutput, cursor.Current)\t}\tadoptablePetsCount += adoptableDogsCount\treturn nil})if err != nil {\treturn err}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/long-running-queries/",
        "description": "",
        "code": "db = client.petsasync with await client.start_session(snapshot=True) as s:    adoptablePetsCount = 0    docs = await db.cats.aggregate(        [{\"$match\": {\"adoptable\": True}}, {\"$count\": \"adoptableCatsCount\"}], session=s    ).to_list(None)    adoptablePetsCount = docs[0][\"adoptableCatsCount\"]    docs = await db.dogs.aggregate(        [{\"$match\": {\"adoptable\": True}}, {\"$count\": \"adoptableDogsCount\"}], session=s    ).to_list(None)    adoptablePetsCount += docs[0][\"adoptableDogsCount\"]print(adoptablePetsCount)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/long-running-queries/",
        "description": "",
        "code": "db = client.petswith client.start_session(snapshot=True) as s:    adoptablePetsCount = (        (            db.cats.aggregate(                [{\"$match\": {\"adoptable\": True}}, {\"$count\": \"adoptableCatsCount\"}],                session=s,            )        ).next()    )[\"adoptableCatsCount\"]    adoptablePetsCount += (        (            db.dogs.aggregate(                [{\"$match\": {\"adoptable\": True}}, {\"$count\": \"adoptableDogsCount\"}],                session=s,            )        ).next()    )[\"adoptableDogsCount\"]print(adoptablePetsCount)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/long-running-queries/",
        "description": "",
        "code": "ctx := context.TODO()sess, err := client.StartSession(options.Session().SetSnapshot(true))if err != nil {\treturn err}defer sess.EndSession(ctx)var totalDailySales int32err = mongo.WithSession(ctx, sess, func(ctx context.Context) error {\t// Count the total daily sales\tconst totalDailySalesOutput = \"totalDailySales\"\tcursor, err := db.Collection(\"sales\").Aggregate(ctx, mongo.Pipeline{\t\tbson.D{{\"$match\",\t\t\tbson.D{{\"$expr\",\t\t\t\tbson.D{{\"$gt\",\t\t\t\t\tbson.A{\"$saleDate\",\t\t\t\t\t\tbson.D{{\"$dateSubtract\",\t\t\t\t\t\t\tbson.D{\t\t\t\t\t\t\t\t{\"startDate\", \"$$NOW\"},\t\t\t\t\t\t\t\t{\"unit\", \"day\"},\t\t\t\t\t\t\t\t{\"amount\", 1},\t\t\t\t\t\t\t},\t\t\t\t\t\t}},\t\t\t\t\t},\t\t\t\t}},\t\t\t}},\t\t}},\t\tbson.D{{\"$count\", totalDailySalesOutput}},\t})\tif err != nil {\t\treturn err\t}\tif !cursor.Next(ctx) {\t\treturn fmt.Errorf(\"expected aggregate to return a document, but got none\")\t}\tresp := cursor.Current.Lookup(totalDailySalesOutput)\tvar ok bool\ttotalDailySales, ok = resp.Int32OK()\tif !ok {\t\treturn fmt.Errorf(\"failed to find int32 field %q in document %v\", totalDailySalesOutput, cursor.Current)\t}\treturn nil})if err != nil {\treturn err}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/long-running-queries/",
        "description": "",
        "code": "db = client.retailasync with await client.start_session(snapshot=True) as s:    docs = await db.sales.aggregate(        [            {                \"$match\": {                    \"$expr\": {                        \"$gt\": [                            \"$saleDate\",                            {                                \"$dateSubtract\": {                                    \"startDate\": \"$$NOW\",                                    \"unit\": \"day\",                                    \"amount\": 1,                                }                            },                        ]                    }                }            },            {\"$count\": \"totalDailySales\"},        ],        session=s,    ).to_list(None)    total = docs[0][\"totalDailySales\"]    print(total)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/long-running-queries/",
        "description": "",
        "code": "db = client.retailwith client.start_session(snapshot=True) as s:    _ = (        (            db.sales.aggregate(                [                    {                        \"$match\": {                            \"$expr\": {                                \"$gt\": [                                    \"$saleDate\",                                    {                                        \"$dateSubtract\": {                                            \"startDate\": \"$$NOW\",                                            \"unit\": \"day\",                                            \"amount\": 1,                                        }                                    },                                ]                            }                        }                    },                    {\"$count\": \"totalDailySales\"},                ],                session=s,            )        ).next()    )[\"totalDailySales\"]"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/long-running-queries/",
        "description": "",
        "code": "db.adminCommand( { setParameter: 1, minSnapshotHistoryWindowInSeconds: 600 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "db.inventory.insertMany( [   { item: \"canvas\", qty: 100, size: { h: 28, w: 35.5, uom: \"cm\" }, status: \"A\" },   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"mat\", qty: 85, size: { h: 27.9, w: 35.5, uom: \"cm\" }, status: \"A\" },   { item: \"mousepad\", qty: 25, size: { h: 19, w: 22.85, uom: \"cm\" }, status: \"P\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"P\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" },   { item: \"sketchbook\", qty: 80, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"sketch pad\", qty: 95, size: { h: 22.85, w: 30.5, uom: \"cm\" }, status: \"A\" }] );"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"canvas\",            \"qty\": 100,            \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"mat\",            \"qty\": 85,            \"size\": {\"h\": 27.9, \"w\": 35.5, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"mousepad\",            \"qty\": 25,            \"size\": {\"h\": 19, \"w\": 22.85, \"uom\": \"cm\"},            \"status\": \"P\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"P\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"sketchbook\",            \"qty\": 80,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"sketch pad\",            \"qty\": 95,            \"size\": {\"h\": 22.85, \"w\": 30.5, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'canvas',    qty: 100,    size: { h: 28, w: 35.5, uom: 'cm' },    status: 'A'  },  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'mat',    qty: 85,    size: { h: 27.9, w: 35.5, uom: 'cm' },    status: 'A'  },  {    item: 'mousepad',    qty: 25,    size: { h: 19, w: 22.85, uom: 'cm' },    status: 'P'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'P'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  },  {    item: 'sketchbook',    qty: 80,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'sketch pad',    qty: 95,    size: { h: 22.85, w: 30.5, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"canvas\",            \"qty\": 100,            \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"mat\",            \"qty\": 85,            \"size\": {\"h\": 27.9, \"w\": 35.5, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"mousepad\",            \"qty\": 25,            \"size\": {\"h\": 19, \"w\": 22.85, \"uom\": \"cm\"},            \"status\": \"P\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"P\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"sketchbook\",            \"qty\": 80,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"sketch pad\",            \"qty\": 95,            \"size\": {\"h\": 22.85, \"w\": 30.5, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "db.inventory.updateOne(   { item: \"paper\" },   {     $set: { \"size.uom\": \"cm\", status: \"P\" },     $currentDate: { lastModified: true }   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "await db.inventory.update_one(    {\"item\": \"paper\"},    {\"$set\": {\"size.uom\": \"cm\", \"status\": \"P\"}, \"$currentDate\": {\"lastModified\": True}},)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "await db.collection('inventory').updateOne(  { item: 'paper' },  {    $set: { 'size.uom': 'cm', status: 'P' },    $currentDate: { lastModified: true }  });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "db.inventory.update_one(    {\"item\": \"paper\"},    {\"$set\": {\"size.uom\": \"cm\", \"status\": \"P\"}, \"$currentDate\": {\"lastModified\": True}},)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "db.inventory.updateMany(   { \"qty\": { $lt: 50 } },   {     $set: { \"size.uom\": \"in\", status: \"P\" },     $currentDate: { lastModified: true }   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "await db.inventory.update_many(    {\"qty\": {\"$lt\": 50}},    {\"$set\": {\"size.uom\": \"in\", \"status\": \"P\"}, \"$currentDate\": {\"lastModified\": True}},)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "await db.collection('inventory').updateMany(  { qty: { $lt: 50 } },  {    $set: { 'size.uom': 'in', status: 'P' },    $currentDate: { lastModified: true }  });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "db.inventory.update_many(    {\"qty\": {\"$lt\": 50}},    {\"$set\": {\"size.uom\": \"in\", \"status\": \"P\"}, \"$currentDate\": {\"lastModified\": True}},)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "db.inventory.replaceOne(   { item: \"paper\" },   { item: \"paper\", instock: [ { warehouse: \"A\", qty: 60 }, { warehouse: \"B\", qty: 40 } ] })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "await db.inventory.replace_one(    {\"item\": \"paper\"},    {        \"item\": \"paper\",        \"instock\": [{\"warehouse\": \"A\", \"qty\": 60}, {\"warehouse\": \"B\", \"qty\": 40}],    },)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "await db.collection('inventory').replaceOne(  { item: 'paper' },  {    item: 'paper',    instock: [      { warehouse: 'A', qty: 60 },      { warehouse: 'B', qty: 40 }    ]  });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/update-documents/",
        "description": "",
        "code": "db.inventory.replace_one(    {\"item\": \"paper\"},    {        \"item\": \"paper\",        \"instock\": [{\"warehouse\": \"A\", \"qty\": 60}, {\"warehouse\": \"B\", \"qty\": 40}],    },)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "db.inventory.insertMany( [   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"P\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" },] );"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"P\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'P'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"P\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "db.inventory.deleteMany({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "await db.inventory.delete_many({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "await db.collection('inventory').deleteMany({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "db.inventory.delete_many({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "db.inventory.deleteMany({ status : \"A\" })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "await db.inventory.delete_many({\"status\": \"A\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "await db.collection('inventory').deleteMany({ status: 'A' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "db.inventory.delete_many({\"status\": \"A\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "db.inventory.deleteOne( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "await db.inventory.delete_one({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "await db.collection('inventory').deleteOne({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/remove-documents/",
        "description": "",
        "code": "db.inventory.delete_one({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/core/bulk-write-operations/",
        "description": "",
        "code": "try {   db.pizzas.bulkWrite( [      { insertOne: { document: { _id: 3, type: \"beef\", size: \"medium\", price: 6 } } },      { insertOne: { document: { _id: 4, type: \"sausage\", size: \"large\", price: 10 } } },      { updateOne: {         filter: { type: \"cheese\" },         update: { $set: { price: 8 } }      } },      { deleteOne: { filter: { type: \"pepperoni\"} } },      { replaceOne: {         filter: { type: \"vegan\" },         replacement: { type: \"tofu\", size: \"small\", price: 4 }      } }   ] )} catch( error ) {   print( error )}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/core/bulk-write-operations/",
        "description": "",
        "code": "db.getMongo().bulkWrite(   [      {         namespace: 'db.authors',         name: 'insertOne',         document: { name: 'Stephen King' }      },      {         namespace: 'db.books',         name: 'insertOne',         document: { name: 'It' }      },      {         namespace: 'db.books',         name: 'updateOne',         filter: { name: 'it' },         update: { $set: { year: 1986 } }      }   ],   {      ordered: true,      bypassDocumentValidation: true   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.insertOne( {    user_id: \"abc123\",    age: 55,    status: \"A\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.createCollection(\"people\")"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.updateMany(    { },    { $set: { join_date: new Date() } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.updateMany(    { },    { $unset: { \"join_date\": \"\" } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.createIndex( { user_id: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.createIndex( { user_id: 1, age: -1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.drop()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.insertOne(   { user_id: \"bcd001\", age: 45, status: \"A\" })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(    { },    { user_id: 1, status: 1 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(    { },    { user_id: 1, status: 1, _id: 0 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(    { status: \"A\" })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(    { status: \"A\" },    { user_id: 1, status: 1, _id: 0 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(    { status: { $ne: \"A\" } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(    { status: \"A\",      age: 50 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(    { $or: [ { status: \"A\" } , { age: 50 } ] })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(    { age: { $gt: 25 } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(   { age: { $lt: 25 } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find(   { age: { $gt: 25, $lte: 50 } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find( { user_id: /bc/ } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find( { user_id: { $regex: /bc/ } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find( { user_id: /^bc/ } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find( { user_id: { $regex: /^bc/ } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find( { status: \"A\" } ).sort( { user_id: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find( { status: \"A\" } ).sort( { user_id: -1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.count()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find().count()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.count( { user_id: { $exists: true } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find( { user_id: { $exists: true } } ).count()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.count( { age: { $gt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find( { age: { $gt: 30 } } ).count()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.aggregate( [ { $group : { _id : \"$status\" } } ] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.distinct( \"status\" )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.findOne()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find().limit(1)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find().limit(5).skip(10)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.find( { status: \"A\" } ).explain()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.updateMany(   { age: { $gt: 25 } },   { $set: { status: \"C\" } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.updateMany(   { status: \"A\" } ,   { $inc: { age: 3 } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.deleteMany( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/sql-comparison/",
        "description": "",
        "code": "db.people.deleteMany({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/natural-language-to-mongodb/",
        "description": "",
        "code": "db.movies.aggregate([  {    $match: {      year: 2015,    },  },  {    $sort: {      num_mflix_comments: -1,    },  },  {    $limit: 10,  },  {    $project: {      _id: 0,      genres: 1,      runtime: 1,    },  },]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/natural-language-to-mongodb/",
        "description": "",
        "code": "You are an expert data analyst experienced at using MongoDB.Your job is to take information about a MongoDB database plus a natural language query and generate a MongoDB shell (mongosh) query to execute to retrieve the information needed to answer the natural language query.Format the mongosh query in the following structure:`db.<collection name>.find({/* query */})` or `db.<collection name>.aggregate({/* query */})`"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/natural-language-to-mongodb/",
        "description": "",
        "code": "You are an expert data analyst experienced at using MongoDB.Your job is to take information about a MongoDB database plus a natural language query and generate a MongoDB shell (mongosh) query to execute to retrieve the information needed to answer the natural language query.Format the mongosh query in the following structure:`db.<collection name>.find({/* query */})` or `db.<collection name>.aggregate({/* query */})`Some general query-authoring tips:1. Ensure proper use of MongoDB operators ($eq, $gt, $lt, etc.) and data types (ObjectId, ISODate).2. For complex queries, use aggregation pipeline with proper stages ($match, $group, $lookup, etc.).3. Consider performance by utilizing available indexes, avoiding $where and full collection scans, and using covered queries where possible.4. Include sorting (.sort()) and limiting (.limit()) when appropriate for result set management.5. Handle null values and existence checks explicitly with $exists and $type operators to differentiate between missing fields, null values, and empty arrays.6. Do not include `null` in results objects in aggregation, e.g. do not include _id: null.7. For date operations, NEVER use an empty new date object (e.g. `new Date()`). ALWAYS specify the date, such as `new Date(\"2024-10-24\")`. Use the provided 'Latest Date' field to inform dates in queries.8. For Decimal128 operations, prefer range queries over exact equality.9. When querying arrays, use appropriate operators like $elemMatch for complex matching, $all to match multiple elements, or $size for array length checks."
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/geospatial-queries/",
        "description": "",
        "code": "db.collection.createIndex( { <location field> : \"2dsphere\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/geospatial-queries/",
        "description": "",
        "code": "db.collection.createIndex( { <location field> : \"2d\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/geospatial-queries/",
        "description": "",
        "code": "db.places.insertMany( [   {      name: \"Central Park\",      location: { type: \"Point\", coordinates: [ -73.97, 40.77 ] },      category: \"Parks\"   },   {      name: \"Sara D. Roosevelt Park\",      location: { type: \"Point\", coordinates: [ -73.9928, 40.7193 ] },      category: \"Parks\"   },   {      name: \"Polo Grounds\",      location: { type: \"Point\", coordinates: [ -73.9375, 40.8303 ] },      category: \"Stadiums\"   }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/geospatial-queries/",
        "description": "",
        "code": "db.places.createIndex( { location: \"2dsphere\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/geospatial-queries/",
        "description": "",
        "code": "db.places.find(   {     location:       { $near:          {            $geometry: { type: \"Point\",  coordinates: [ -73.9667, 40.78 ] },            $minDistance: 1000,            $maxDistance: 5000          }       }   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/geospatial-queries/",
        "description": "",
        "code": "db.places.aggregate( [   {      $geoNear: {         near: { type: \"Point\", coordinates: [ -73.9667, 40.78 ] },         spherical: true,         query: { category: \"Parks\" },         distanceField: \"calcDistance\"      }   }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/read-concern/",
        "description": "",
        "code": "db.collection.find().readConcern(<level>)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/read-concern/",
        "description": "",
        "code": "db.restaurants.find( { _id: 5 } ).readConcern(\"linearizable\").maxTimeMS(10000)db.runCommand( {     find: \"restaurants\",     filter: { _id: 5 },     readConcern: { level: \"linearizable\" },     maxTimeMS: 10000} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/aggregation/",
        "description": "",
        "code": "db.orders.aggregate( [   // Stage 1: Filter pizza order documents by pizza size   {      $match: { size: \"medium\" }   },   // Stage 2: Group remaining documents by pizza name and calculate total quantity   {      $group: { _id: \"$name\", totalQuantity: { $sum: \"$quantity\" } }   }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "cursor = db.inventory.watch()document = await cursor.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "const collection = db.collection('inventory');const changeStream = collection.watch();changeStream  .on('change', next => {    // process next document  })  .once('error', () => {    // handle error  });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "const collection = db.collection('inventory');const changeStream = collection.watch();const next = await changeStream.next();"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "cursor = db.inventory.watch()next(cursor)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "let inventory = db.collection(\"inventory\")// Option 1: retrieve next document via next()let next = inventory.watch().flatMap { cursor in    cursor.next()}// Option 2: register a callback to execute for each documentlet result = inventory.watch().flatMap { cursor in    cursor.forEach { event in        // process event        print(event)    }}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "let inventory = db.collection(\"inventory\")let changeStream = try inventory.watch()let next = changeStream.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "MongoClient mongoClient = MongoClients.create(\"mongodb://<username>:<password>@<host>:<port>\");// Select the MongoDB database and collection to open the change stream againstMongoDatabase db = mongoClient.getDatabase(\"myTargetDatabase\");MongoCollection<Document> collection = db.getCollection(\"myTargetCollection\");// Create $match pipeline stage.List<Bson> pipeline = singletonList(Aggregates.match(Filters.or(   Document.parse(\"{'fullDocument.username': 'alice'}\"),   Filters.in(\"operationType\", asList(\"delete\")))));// Create the change stream cursor, passing the pipeline to the// collection.watch() methodMongoCursor<Document> cursor = collection.watch(pipeline).iterator();"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "pipeline = [    {\"$match\": {\"fullDocument.username\": \"alice\"}},    {\"$addFields\": {\"newField\": \"this is an added field!\"}},]cursor = db.inventory.watch(pipeline=pipeline)document = await cursor.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "const pipeline = [  { $match: { 'fullDocument.username': 'alice' } },  { $addFields: { newField: 'this is an added field!' } }];const collection = db.collection('inventory');const changeStream = collection.watch(pipeline);changeStream  .on('change', next => {    // process next document  })  .once('error', error => {    // handle error  });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "pipeline = [    {\"$match\": {\"fullDocument.username\": \"alice\"}},    {\"$addFields\": {\"newField\": \"this is an added field!\"}},]cursor = db.inventory.watch(pipeline=pipeline)next(cursor)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "let pipeline: [BSONDocument] = [    [\"$match\": [\"fullDocument.username\": \"alice\"]],    [\"$addFields\": [\"newField\": \"this is an added field!\"]]]let inventory = db.collection(\"inventory\")// Option 1: use next() to iteratelet next = inventory.watch(pipeline, withEventType: BSONDocument.self).flatMap { changeStream in    changeStream.next()}// Option 2: register a callback to execute for each documentlet result = inventory.watch(pipeline, withEventType: BSONDocument.self).flatMap { changeStream in    changeStream.forEach { event in        // process event        print(event)    }}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "let pipeline: [BSONDocument] = [    [\"$match\": [\"fullDocument.username\": \"alice\"]],    [\"$addFields\": [\"newField\": \"this is an added field!\"]]]let inventory = db.collection(\"inventory\")let changeStream = try inventory.watch(pipeline, withEventType: BSONDocument.self)let next = changeStream.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "cursor = db.inventory.watch(full_document=\"updateLookup\")document = await cursor.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "const collection = db.collection('inventory');const changeStream = collection.watch([], { fullDocument: 'updateLookup' });changeStream  .on('change', next => {    // process next document  })  .once('error', error => {    // handle error  });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "cursor = db.inventory.watch(full_document=\"updateLookup\")next(cursor)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "let inventory = db.collection(\"inventory\")// Option 1: use next() to iteratelet next = inventory.watch(options: ChangeStreamOptions(fullDocument: .updateLookup))    .flatMap { changeStream in        changeStream.next()    }// Option 2: register a callback to execute for each documentlet result = inventory.watch(options: ChangeStreamOptions(fullDocument: .updateLookup))    .flatMap { changeStream in        changeStream.forEach { event in            // process event            print(event)        }    }"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "let inventory = db.collection(\"inventory\")let changeStream = try inventory.watch(options: ChangeStreamOptions(fullDocument: .updateLookup))let next = changeStream.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "resume_token = cursor.resume_tokencursor = db.inventory.watch(resume_after=resume_token)document = await cursor.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "const collection = db.collection('inventory');const changeStream = collection.watch();let newChangeStream;changeStream  .once('change', next => {    const resumeToken = changeStream.resumeToken;    changeStream.close();    newChangeStream = collection.watch([], { resumeAfter: resumeToken });    newChangeStream      .on('change', next => {        processChange(next);      })      .once('error', error => {        // handle error      });  })  .once('error', error => {    // handle error  });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "resume_token = cursor.resume_tokencursor = db.inventory.watch(resume_after=resume_token)next(cursor)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "let inventory = db.collection(\"inventory\")inventory.watch(options: ChangeStreamOptions(fullDocument: .updateLookup))    .flatMap { changeStream in        changeStream.next().map { _ in            changeStream.resumeToken        }.always { _ in            _ = changeStream.kill()        }    }.flatMap { resumeToken in        inventory.watch(options: ChangeStreamOptions(resumeAfter: resumeToken)).flatMap { newStream in            newStream.forEach { event in                // process event                print(event)            }        }    }"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "let inventory = db.collection(\"inventory\")let changeStream = try inventory.watch(options: ChangeStreamOptions(fullDocument: .updateLookup))let next = changeStream.next()let resumeToken = changeStream.resumeTokenlet resumedChangeStream = try inventory.watch(options: ChangeStreamOptions(resumeAfter: resumeToken))let nextAfterResume = resumedChangeStream.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "use admindb.runCommand( {   setClusterParameter:      { changeStreamOptions: {         preAndPostImages: { expireAfterSeconds: 100 }      } }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/changeStreams/",
        "description": "",
        "code": "db.adminCommand( { getClusterParameter: \"changeStreamOptions\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/core/transactions/",
        "description": "",
        "code": "/* * Copyright 2008-present MongoDB, Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *   http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package org.mongodb.scalaimport org.mongodb.scala.model.{Filters, Updates}import org.mongodb.scala.result.UpdateResultimport scala.concurrent.Awaitimport scala.concurrent.duration.Duration//scalastyle:off magic.numberclass DocumentationTransactionsExampleSpec extends RequiresMongoDBISpec {  // Implicit functions that execute the Observable and return the results  val waitDuration = Duration(5, \"seconds\")  implicit class ObservableExecutor[T](observable: Observable[T]) {    def execute(): Seq[T] = Await.result(observable.toFuture(), waitDuration)  }  implicit class SingleObservableExecutor[T](observable: SingleObservable[T]) {    def execute(): T = Await.result(observable.toFuture(), waitDuration)  }  // end implicit functions  \"The Scala driver\" should \"be able to commit a transaction\" in withClient { client =>    assume(serverVersionAtLeast(List(4, 0, 0)) && !hasSingleHost())    client.getDatabase(\"hr\").drop().execute()    client.getDatabase(\"hr\").createCollection(\"employees\").execute()    client.getDatabase(\"hr\").createCollection(\"events\").execute()    updateEmployeeInfoWithRetry(client).execute() should equal(Completed())    client.getDatabase(\"hr\").drop().execute() should equal(Completed())  }  def updateEmployeeInfo(database: MongoDatabase, observable: SingleObservable[ClientSession]): SingleObservable[ClientSession] = {    observable.map(clientSession => {      val employeesCollection = database.getCollection(\"employees\")      val eventsCollection = database.getCollection(\"events\")      val transactionOptions = TransactionOptions.builder()        .readPreference(ReadPreference.primary())        .readConcern(ReadConcern.SNAPSHOT)        .writeConcern(WriteConcern.MAJORITY)        .build()      clientSession.startTransaction(transactionOptions)      employeesCollection.updateOne(clientSession, Filters.eq(\"employee\", 3), Updates.set(\"status\", \"Inactive\"))        .subscribe((res: UpdateResult) => println(res))      eventsCollection.insertOne(clientSession, Document(\"employee\" -> 3, \"status\" -> Document(\"new\" -> \"Inactive\", \"old\" -> \"Active\")))        .subscribe((res: Completed) => println(res))      clientSession    })  }  def commitAndRetry(observable: SingleObservable[Completed]): SingleObservable[Completed] = {    observable.recoverWith({      case e: MongoException if e.hasErrorLabel(MongoException.UNKNOWN_TRANSACTION_COMMIT_RESULT_LABEL) => {        println(\"UnknownTransactionCommitResult, retrying commit operation ...\")        commitAndRetry(observable)      }      case e: Exception => {        println(s\"Exception during commit ...: $e\")        throw e      }    })  }  def runTransactionAndRetry(observable: SingleObservable[Completed]): SingleObservable[Completed] = {    observable.recoverWith({      case e: MongoException if e.hasErrorLabel(MongoException.TRANSIENT_TRANSACTION_ERROR_LABEL) => {        println(\"TransientTransactionError, aborting transaction and retrying ...\")        runTransactionAndRetry(observable)      }    })  }  def updateEmployeeInfoWithRetry(client: MongoClient): SingleObservable[Completed] = {    val database = client.getDatabase(\"hr\")    val updateEmployeeInfoObservable: Observable[ClientSession] = updateEmployeeInfo(database, client.startSession())    val commitTransactionObservable: SingleObservable[Completed] =      updateEmployeeInfoObservable.flatMap(clientSession => clientSession.commitTransaction())    val commitAndRetryObservable: SingleObservable[Completed] = commitAndRetry(commitTransactionObservable)    runTransactionAndRetry(commitAndRetryObservable)  }}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/core/transactions/",
        "description": "",
        "code": "db.coll.aggregate([   { $group: { _id: null, distinctValues: { $addToSet: \"$x\" } } },   { $project: { _id: 0 } }])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/core/transactions/",
        "description": "",
        "code": "db.coll.aggregate([   { $match: { status: \"A\" } },   { $group: { _id: null, distinctValues: { $addToSet: \"$x\" } } },   { $project: { _id: 0 } }])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/core/transactions/",
        "description": "",
        "code": "db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#std-label-query-documents-atlas-ui",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.collection.find( <query>, <projection>, <options> )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.collection.find( { qty: { $gt: 4 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { _id: 5 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { \"name.last\": \"Hopper\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   { _id: { $in: [ 5, ObjectId(\"507c35dd8fada716c89d0013\") ] } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { birth: { $gt: new Date('1950-01-01') } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   { \"name.last\": { $regex: /^N/ } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { birth: { $gt: new Date('1940-01-01'), $lt: new Date('1960-01-01') } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( {   birth: { $gt: new Date('1920-01-01') },   death: { $exists: false }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.monthlyBudget.insertMany( [   { _id : 1, category : \"food\", budget : 400, spent : 450 },   { _id : 2, category : \"drinks\", budget : 100, spent : 150 },   { _id : 3, category : \"clothes\", budget : 100, spent : 50 },   { _id : 4, category : \"misc\", budget : 500, spent : 300 },   { _id : 5, category : \"travel\", budget : 200, spent : 650 }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.monthlyBudget.find( { $expr: { $gt: [ \"$spent\" , \"$budget\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(    { name: { first: \"Yukihiro\", last: \"Matsumoto\" } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   {     \"name.first\": \"Yukihiro\",     \"name.last\": \"Matsumoto\"   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { contribs: \"UNIX\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { contribs: { $in: [ \"ALGOL\", \"Lisp\" ]} } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { contribs: { $all: [ \"ALGOL\", \"Lisp\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { contribs: { $size: 4 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   { \"awards.award\": \"Turing Award\" })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   { awards: { $elemMatch: { award: \"Turing Award\", year: { $gt: 1980 } } } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.testbson.find( {}, {}, { bsonRegExp: true } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { }, { name: 1, contribs: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   { contribs: 'OOP' },   { 'name.first': 0, birth: 0 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   { },   { name: 1, contribs: 1, _id: 0 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   { },   { _id: 0, 'name.last': 1, contribs: { $slice: 2 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   { },   { _id: 0, name: { last: 1 }, contribs: { $slice: 2 } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find(   { },   {     _id: 0,     name: {        $concat: [           { $ifNull: [ \"$name.aka\", \"$name.first\" ] },           \" \",           \"$name.last\"        ]     },     birth: 1,     contribs: 1,     awards: { $cond: { if: { $isArray: \"$awards\" }, then: { $size: \"$awards\" }, else: 0 } },     reportDate: { $dateToString: {  date: new Date(), format: \"%Y-%m-%d\" } },     reportBy: \"hellouser123\",     reportNumber: { $literal: 1 }   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "var myCursor = db.bios.find( );myCursor"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "var myCursor = db.bios.find( );var myDocument = myCursor.hasNext() ? myCursor.next() : null;if (myDocument) {    var myName = myDocument.name;    print (tojson(myName));}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "var myCursor = db.bios.find( );myCursor.forEach(printjson);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find().sort( { name: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find().limit( 5 )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find().skip( 5 )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find( { \"name.last\": \"hopper\" } ).collation( { locale: \"en_US\", strength: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.bios.find().sort( { name: 1 } ).limit( 5 )db.bios.find().limit( 5 ).sort( { name: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.cakeFlavors.insertMany( [   { _id: 1, flavor: \"chocolate\" },   { _id: 2, flavor: \"strawberry\" },   { _id: 3, flavor: \"cherry\" }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.cakeFlavors.find(   { $expr: { $eq: [ \"$flavor\", \"$$targetFlavor\" ] } },   { _id: 0 },   { let : { targetFlavor: \"chocolate\" }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.createRole( { role: \"Marketing\", roles: [], privileges: [] } )db.createRole( { role: \"Sales\", roles: [], privileges: [] } )db.createRole( { role: \"Development\", roles: [], privileges: [] } )db.createRole( { role: \"Operations\", roles: [], privileges: [] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.createUser( {   user: \"John\",   pwd: \"jn008\",   roles: [      { role: \"Marketing\", db: \"test\" },      { role: \"Development\", db: \"test\" },      { role: \"Operations\", db: \"test\" },      { role: \"read\", db: \"test\" }   ]} )db.createUser( {   user: \"Jane\",   pwd: \"je009\",   roles: [      { role: \"Sales\", db: \"test\" },      { role: \"Operations\", db: \"test\" },      { role: \"read\", db: \"test\" }   ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.budget.insertMany( [   {      _id: 0,      allowedRoles: [ \"Marketing\" ],      comment: \"For marketing team\",      yearlyBudget: 15000   },   {      _id: 1,      allowedRoles: [ \"Sales\" ],      comment: \"For sales team\",      yearlyBudget: 17000,      salesEventsBudget: 1000   },   {      _id: 2,      allowedRoles: [ \"Operations\" ],      comment: \"For operations team\",      yearlyBudget: 19000,      cloudBudget: 12000   },   {      _id: 3,      allowedRoles: [ \"Development\" ],      comment: \"For development team\",      yearlyBudget: 27000   }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.auth( \"John\", \"jn008\" )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.budget.find( {   $expr: {      $not: {         $eq: [ { $setIntersection: [ \"$allowedRoles\", \"$$USER_ROLES.role\" ] }, [] ]      }   }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.auth( \"Jane\", \"je009\" )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.budget.find( {   $expr: {      $not: {         $eq: [ { $setIntersection: [ \"$allowedRoles\", \"$$USER_ROLES.role\" ] }, [] ]      }   }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.users.insertMany( [   { username: \"david\", age: 27 },   { username: \"amanda\", age: 25 },   { username: \"rajiv\", age: 32 },   { username: \"rajiv\", age: 90 }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.users.find(   { username : \"rajiv\"}, // query   { age : 1 }, // projection   { limit : 1 } // options)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.users.find(   { username : \"david\" },   { age : 1 },   { allowDiskUse : true })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "var cursor = db.users.find(   { username: \"amanda\" },   { age : 1 },   { explain : \"executionStats\" })cursor.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find",
        "description": "",
        "code": "db.users.find(   {},   { username: 1, age: 1 },   {     limit: 2,     showRecordId: true   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "db.inventory.insertOne(   { item: \"canvas\", qty: 100, tags: [\"cotton\"], size: { h: 28, w: 35.5, uom: \"cm\" } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "await db.inventory.insert_one(    {        \"item\": \"canvas\",        \"qty\": 100,        \"tags\": [\"cotton\"],        \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"},    })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "await db.collection('inventory').insertOne({  item: 'canvas',  qty: 100,  tags: ['cotton'],  size: { h: 28, w: 35.5, uom: 'cm' }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "db.inventory.insert_one(    {        \"item\": \"canvas\",        \"qty\": 100,        \"tags\": [\"cotton\"],        \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"},    })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "db.inventory.find( { item: \"canvas\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": \"canvas\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ item: 'canvas' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "cursor = db.inventory.find({\"item\": \"canvas\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, tags: [\"blank\", \"red\"], size: { h: 14, w: 21, uom: \"cm\" } },   { item: \"mat\", qty: 85, tags: [\"gray\"], size: { h: 27.9, w: 35.5, uom: \"cm\" } },   { item: \"mousepad\", qty: 25, tags: [\"gel\", \"blue\"], size: { h: 19, w: 22.85, uom: \"cm\" } }])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"tags\": [\"blank\", \"red\"],            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},        },        {            \"item\": \"mat\",            \"qty\": 85,            \"tags\": [\"gray\"],            \"size\": {\"h\": 27.9, \"w\": 35.5, \"uom\": \"cm\"},        },        {            \"item\": \"mousepad\",            \"qty\": 25,            \"tags\": [\"gel\", \"blue\"],            \"size\": {\"h\": 19, \"w\": 22.85, \"uom\": \"cm\"},        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    tags: ['blank', 'red'],    size: { h: 14, w: 21, uom: 'cm' }  },  {    item: 'mat',    qty: 85,    tags: ['gray'],    size: { h: 27.9, w: 35.5, uom: 'cm' }  },  {    item: 'mousepad',    qty: 25,    tags: ['gel', 'blue'],    size: { h: 19, w: 22.85, uom: 'cm' }  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"tags\": [\"blank\", \"red\"],            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},        },        {            \"item\": \"mat\",            \"qty\": 85,            \"tags\": [\"gray\"],            \"size\": {\"h\": 27.9, \"w\": 35.5, \"uom\": \"cm\"},        },        {            \"item\": \"mousepad\",            \"qty\": 25,            \"tags\": [\"gel\", \"blue\"],            \"size\": {\"h\": 19, \"w\": 22.85, \"uom\": \"cm\"},        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/insert-documents/#std-label-write-op-insert",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#select-all-documents-in-a-collection",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-equality-condition",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-conditions-using-query-operators",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/or/#mongodb-query-op.-or",
        "description": "",
        "code": "db.inventory.find( { $or: [ { quantity: { $lt: 20 } }, { price: 10 } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/or/#mongodb-query-op.-or",
        "description": "",
        "code": "db.inventory.find( { $or: [ { quantity: { $lt: 20 } }, { price: 10 } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/or/#mongodb-query-op.-or",
        "description": "",
        "code": "db.inventory.createIndex( { quantity: 1 } )db.inventory.createIndex( { price: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/or/#mongodb-query-op.-or",
        "description": "",
        "code": "db.places.find( {   $or: [      { location: { $near: [ 40, 5 ] } },      { category: \"restaurant\" }   ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/or/#mongodb-query-op.-or",
        "description": "",
        "code": "db.places.find( {   $or: [      {         location: {            $geoIntersects: {               $geometry: {                  type: \"Polygon\",                  coordinates: [                     [ [ 39, 4 ], [ 41, 4 ], [ 41, 6 ], [ 39, 4 ] ]                  ]               }            }         }      },      { category: \"restaurant\" }   ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/or/#mongodb-query-op.-or",
        "description": "",
        "code": "db.inventory.find ( { quantity: { $in: [20, 50] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/or/#mongodb-query-op.-or",
        "description": "",
        "code": "db.example.find( {   $expr: { $eq: [ { $divide: [ 1, \"$x\" ] }, 3 ] }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/or/#mongodb-query-op.-or",
        "description": "",
        "code": "db.example.find( {   $or: [      { x: { $eq: 0 } },      { $expr: { $eq: [ { $divide: [ 1, \"$x\" ] }, 3 ] } }   ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/in/#mongodb-query-op.-in",
        "description": "",
        "code": "db.inventory.insertMany( [   { item: \"Pens\", quantity: 350, tags: [ \"school\", \"office\" ] },   { item: \"Erasers\", quantity: 15, tags: [ \"school\", \"home\" ] },   { item: \"Maps\", tags: [ \"office\", \"storage\" ] },   { item: \"Books\", quantity: 5, tags: [ \"school\", \"storage\", \"home\" ] }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/in/#mongodb-query-op.-in",
        "description": "",
        "code": "db.inventory.find( { quantity: { $in: [ 5, 15 ] } }, { _id: 0 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/in/#mongodb-query-op.-in",
        "description": "",
        "code": "db.inventory.updateMany(   { tags: { $in: [ \"home\", \"school\" ] } },   { $set: { exclude: false } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/in/#mongodb-query-op.-in",
        "description": "",
        "code": "db.inventory.find( { tags: { $in: [ /^be/, /^st/ ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-conditions",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/lt/#mongodb-query-op.-lt",
        "description": "",
        "code": "db.inventory.insertMany( [   {      item: \"nuts\", quantity: 30,      carrier: { name: \"Shipit\", fee: 3 }   },   {      item: \"bolts\", quantity: 50,      carrier: { name: \"Shipit\", fee: 4 }   },   {      item: \"washers\", quantity: 10,      carrier: { name: \"Shipit\", fee: 1 }   }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/lt/#mongodb-query-op.-lt",
        "description": "",
        "code": "db.inventory.find( { quantity: { $lt: 20 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/lt/#mongodb-query-op.-lt",
        "description": "",
        "code": "db.inventory.updateMany( { \"carrier.fee\": { $lt: 20 } }, { $set: { price: 9.99 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.collection.find( <query>, <projection>, <options> )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.collection.find( { qty: { $gt: 4 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { _id: 5 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { \"name.last\": \"Hopper\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   { _id: { $in: [ 5, ObjectId(\"507c35dd8fada716c89d0013\") ] } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { birth: { $gt: new Date('1950-01-01') } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   { \"name.last\": { $regex: /^N/ } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { birth: { $gt: new Date('1940-01-01'), $lt: new Date('1960-01-01') } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( {   birth: { $gt: new Date('1920-01-01') },   death: { $exists: false }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.monthlyBudget.insertMany( [   { _id : 1, category : \"food\", budget : 400, spent : 450 },   { _id : 2, category : \"drinks\", budget : 100, spent : 150 },   { _id : 3, category : \"clothes\", budget : 100, spent : 50 },   { _id : 4, category : \"misc\", budget : 500, spent : 300 },   { _id : 5, category : \"travel\", budget : 200, spent : 650 }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.monthlyBudget.find( { $expr: { $gt: [ \"$spent\" , \"$budget\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(    { name: { first: \"Yukihiro\", last: \"Matsumoto\" } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   {     \"name.first\": \"Yukihiro\",     \"name.last\": \"Matsumoto\"   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { contribs: \"UNIX\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { contribs: { $in: [ \"ALGOL\", \"Lisp\" ]} } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { contribs: { $all: [ \"ALGOL\", \"Lisp\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { contribs: { $size: 4 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   { \"awards.award\": \"Turing Award\" })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   { awards: { $elemMatch: { award: \"Turing Award\", year: { $gt: 1980 } } } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.testbson.find( {}, {}, { bsonRegExp: true } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { }, { name: 1, contribs: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   { contribs: 'OOP' },   { 'name.first': 0, birth: 0 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   { },   { name: 1, contribs: 1, _id: 0 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   { },   { _id: 0, 'name.last': 1, contribs: { $slice: 2 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   { },   { _id: 0, name: { last: 1 }, contribs: { $slice: 2 } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find(   { },   {     _id: 0,     name: {        $concat: [           { $ifNull: [ \"$name.aka\", \"$name.first\" ] },           \" \",           \"$name.last\"        ]     },     birth: 1,     contribs: 1,     awards: { $cond: { if: { $isArray: \"$awards\" }, then: { $size: \"$awards\" }, else: 0 } },     reportDate: { $dateToString: {  date: new Date(), format: \"%Y-%m-%d\" } },     reportBy: \"hellouser123\",     reportNumber: { $literal: 1 }   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "var myCursor = db.bios.find( );myCursor"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "var myCursor = db.bios.find( );var myDocument = myCursor.hasNext() ? myCursor.next() : null;if (myDocument) {    var myName = myDocument.name;    print (tojson(myName));}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "var myCursor = db.bios.find( );myCursor.forEach(printjson);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find().sort( { name: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find().limit( 5 )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find().skip( 5 )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find( { \"name.last\": \"hopper\" } ).collation( { locale: \"en_US\", strength: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.bios.find().sort( { name: 1 } ).limit( 5 )db.bios.find().limit( 5 ).sort( { name: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.cakeFlavors.insertMany( [   { _id: 1, flavor: \"chocolate\" },   { _id: 2, flavor: \"strawberry\" },   { _id: 3, flavor: \"cherry\" }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.cakeFlavors.find(   { $expr: { $eq: [ \"$flavor\", \"$$targetFlavor\" ] } },   { _id: 0 },   { let : { targetFlavor: \"chocolate\" }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.createRole( { role: \"Marketing\", roles: [], privileges: [] } )db.createRole( { role: \"Sales\", roles: [], privileges: [] } )db.createRole( { role: \"Development\", roles: [], privileges: [] } )db.createRole( { role: \"Operations\", roles: [], privileges: [] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.createUser( {   user: \"John\",   pwd: \"jn008\",   roles: [      { role: \"Marketing\", db: \"test\" },      { role: \"Development\", db: \"test\" },      { role: \"Operations\", db: \"test\" },      { role: \"read\", db: \"test\" }   ]} )db.createUser( {   user: \"Jane\",   pwd: \"je009\",   roles: [      { role: \"Sales\", db: \"test\" },      { role: \"Operations\", db: \"test\" },      { role: \"read\", db: \"test\" }   ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.budget.insertMany( [   {      _id: 0,      allowedRoles: [ \"Marketing\" ],      comment: \"For marketing team\",      yearlyBudget: 15000   },   {      _id: 1,      allowedRoles: [ \"Sales\" ],      comment: \"For sales team\",      yearlyBudget: 17000,      salesEventsBudget: 1000   },   {      _id: 2,      allowedRoles: [ \"Operations\" ],      comment: \"For operations team\",      yearlyBudget: 19000,      cloudBudget: 12000   },   {      _id: 3,      allowedRoles: [ \"Development\" ],      comment: \"For development team\",      yearlyBudget: 27000   }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.auth( \"John\", \"jn008\" )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.budget.find( {   $expr: {      $not: {         $eq: [ { $setIntersection: [ \"$allowedRoles\", \"$$USER_ROLES.role\" ] }, [] ]      }   }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.auth( \"Jane\", \"je009\" )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.budget.find( {   $expr: {      $not: {         $eq: [ { $setIntersection: [ \"$allowedRoles\", \"$$USER_ROLES.role\" ] }, [] ]      }   }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.users.insertMany( [   { username: \"david\", age: 27 },   { username: \"amanda\", age: 25 },   { username: \"rajiv\", age: 32 },   { username: \"rajiv\", age: 90 }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.users.find(   { username : \"rajiv\"}, // query   { age : 1 }, // projection   { limit : 1 } // options)"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.users.find(   { username : \"david\" },   { age : 1 },   { allowDiskUse : true })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "var cursor = db.users.find(   { username: \"amanda\" },   { age : 1 },   { explain : \"executionStats\" })cursor.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#std-label-type-bracketing",
        "description": "",
        "code": "db.users.find(   {},   { username: 1, age: 1 },   {     limit: 2,     showRecordId: true   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-and-as-well-as-or-conditions",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.inventory.find( { item: { $not: /^p.*/ } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.inventory.find( { item: { $not: { $regex: \"^p.*\" } } } )db.inventory.find( { item: { $not: { $regex: /^p.*/ } } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.products.insertMany( [   { _id: 100, sku: \"abc123\", description: \"Single line description.\" },   { _id: 101, sku: \"abc789\", description: \"First line\\nSecond line\" },   { _id: 102, sku: \"xyz456\", description: \"Many spaces before     line\" },   { _id: 103, sku: \"xyz789\", description: \"Multiple\\nline description\" },   { _id: 104, sku: \"Abc789\", description: \"SKU starts with A\" }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.products.find( { sku: { $regex: /789$/ } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.products.find( { sku: { $regex: /^ABC/i } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.products.find( { description: { $regex: /^S/, $options: 'm' } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.products.find( { description: { $regex: /S/ } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.products.find( { description: { $regex: /m.*line/, $options: 'si' } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "var pattern = \"abc #category code\\n123 #item number\"db.products.find( { sku: { $regex: pattern, $options: \"x\" } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.products.find( { sku: { $regex: \"(?i)a(?-i)bc\" } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.songs.insertMany( [   { _id: 0, \"artist\" : \"Blue Öyster Cult\", \"title\": \"The Reaper\" },   { _id: 1, \"artist\": \"Blue Öyster Cult\", \"title\": \"Godzilla\" },   { _id: 2, \"artist\" : \"Blue Oyster Cult\", \"title\": \"Take Me Away\" }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.songs.find( { artist: { $regex: /\\byster/ } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/regex/#mongodb-query-op.-regex",
        "description": "",
        "code": "db.songs.find( { artist: { $regex: \"(*UCP)/\\byster/\" } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-documents-with-mongodb-atlas",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#in-the-mongodb-atlas-ui--go-to-the-clusters-page-for-your-project.",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#navigate-to-the-collection",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#specify-the-filter-field",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#click-apply",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-query-tutorials",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#behavior",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#cursor",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "db.users.insertMany( [   { _id: 0, type: \"admin\", email: \"admin@example.com\", name: \"Admin User\" },   { _id: 1, type: \"user\", email: \"user1@example.com\", name: \"Test User 1\" },   { _id: 2, type: \"user\", email: \"user2@example.com\", name: \"Test User 2\" }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "db.users.find( { type: \"user\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )myCursor.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )myCursor.hasNext()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )while ( myCursor.hasNext() ) {   printjson( myCursor.next() )}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )myCursor.forEach( myDocument => printjson(myDocument) )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )for ( let myDocument of myCursor ) {   printjson( myDocument )}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )let documentArray = myCursor.toArray()documentArray"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )let documentArray = myCursor.toArray()documentArray[1]"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )myCursor.toArray() [1]"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#concurrent-updates-while-using-a-cursor",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#read-isolation",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/replication/#std-label-replication",
        "description": "",
        "code": "db.adminCommand( {  setParameter: 1,  mirrorReads: { samplingRate: 0.0 }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/replication/#std-label-replication",
        "description": "",
        "code": "db.serverStatus( { mirroredReads: 1 } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#query-result-format",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "db.users.insertMany( [   { _id: 0, type: \"admin\", email: \"admin@example.com\", name: \"Admin User\" },   { _id: 1, type: \"user\", email: \"user1@example.com\", name: \"Test User 1\" },   { _id: 2, type: \"user\", email: \"user2@example.com\", name: \"Test User 2\" }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "db.users.find( { type: \"user\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )myCursor.next()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )myCursor.hasNext()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )while ( myCursor.hasNext() ) {   printjson( myCursor.next() )}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )myCursor.forEach( myDocument => printjson(myDocument) )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )for ( let myDocument of myCursor ) {   printjson( myDocument )}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )let documentArray = myCursor.toArray()documentArray"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )let documentArray = myCursor.toArray()documentArray[1]"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/iterate-a-cursor/#std-label-read-operations-cursors",
        "description": "",
        "code": "let myCursor = db.users.find( { type: \"user\" } )myCursor.toArray() [1]"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "db.inventory.insertMany([   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },   { item: \"notebook\", qty: 50, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"A\" },   { item: \"paper\", qty: 100, size: { h: 8.5, w: 11, uom: \"in\" }, status: \"D\" },   { item: \"planner\", qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" }, status: \"D\" },   { item: \"postcard\", qty: 45, size: { h: 10, w: 15.25, uom: \"cm\" }, status: \"A\" }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "await db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "await db.collection('inventory').insertMany([  {    item: 'journal',    qty: 25,    size: { h: 14, w: 21, uom: 'cm' },    status: 'A'  },  {    item: 'notebook',    qty: 50,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'A'  },  {    item: 'paper',    qty: 100,    size: { h: 8.5, w: 11, uom: 'in' },    status: 'D'  },  {    item: 'planner',    qty: 75,    size: { h: 22.85, w: 30, uom: 'cm' },    status: 'D'  },  {    item: 'postcard',    qty: 45,    size: { h: 10, w: 15.25, uom: 'cm' },    status: 'A'  }]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "db.inventory.insert_many(    [        {            \"item\": \"journal\",            \"qty\": 25,            \"size\": {\"h\": 14, \"w\": 21, \"uom\": \"cm\"},            \"status\": \"A\",        },        {            \"item\": \"notebook\",            \"qty\": 50,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"A\",        },        {            \"item\": \"paper\",            \"qty\": 100,            \"size\": {\"h\": 8.5, \"w\": 11, \"uom\": \"in\"},            \"status\": \"D\",        },        {            \"item\": \"planner\",            \"qty\": 75,            \"size\": {\"h\": 22.85, \"w\": 30, \"uom\": \"cm\"},            \"status\": \"D\",        },        {            \"item\": \"postcard\",            \"qty\": 45,            \"size\": {\"h\": 10, \"w\": 15.25, \"uom\": \"cm\"},            \"status\": \"A\",        },    ])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "db.inventory.find( {} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "db.inventory.find( { status: \"D\" } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({ status: 'D' });"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"D\"})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "db.inventory.find( { status: { $in: [ \"A\", \"D\" ] } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: { $in: ['A', 'D'] }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": {\"$in\": [\"A\", \"D\"]}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  qty: { $lt: 30 }});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "db.inventory.find( {     status: \"A\",     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "const cursor = db.collection('inventory').find({  status: 'A',  $or: [{ qty: { $lt: 30 } }, { item: { $regex: '^p' } }]});"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/tutorial/query-documents/#additional-methods-and-options",
        "description": "",
        "code": "cursor = db.inventory.find(    {\"status\": \"A\", \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/#mongodb-method-db.collection.findOne",
        "description": "",
        "code": "db.collection.findOne( <query>, <projection>, <options> )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/#mongodb-method-db.collection.findOne",
        "description": "",
        "code": "db.bios.findOne()"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/#mongodb-method-db.collection.findOne",
        "description": "",
        "code": "db.bios.findOne(   {     $or: [            { 'name.first' : /^G/ },            { birth: { $lt: new Date('01/01/1945') } }          ]   })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/#mongodb-method-db.collection.findOne",
        "description": "",
        "code": "db.bios.findOne(    { },    { name: 1, contribs: 1 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/#mongodb-method-db.collection.findOne",
        "description": "",
        "code": "db.bios.findOne(   { contribs: 'OOP' },   { _id: 0, 'name.first': 0, birth: 0 })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/#mongodb-method-db.collection.findOne",
        "description": "",
        "code": "db.bios.findOne(   { },   { },   { sort: { birth: 1 } })"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/#mongodb-method-db.collection.findOne",
        "description": "",
        "code": "var myDocument = db.bios.findOne();if (myDocument) {   var myName = myDocument.name;   print (tojson(myName));}"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/#mongodb-method-db.collection.findOne",
        "description": "",
        "code": "db.cakeFlavors.insertMany( [   { _id: 1, flavor: \"chocolate\" },   { _id: 2, flavor: \"strawberry\" },   { _id: 3, flavor: \"cherry\" }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/#mongodb-method-db.collection.findOne",
        "description": "",
        "code": "db.cakeFlavors.findOne(   { $expr: { $eq: [ \"$flavor\", \"$$targetFlavor\" ] } },   { _id: 0 },   { let : { targetFlavor: \"chocolate\" }} )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/aggregation/match/#mongodb-pipeline-pipe.-match",
        "description": "",
        "code": "db.articles.aggregate(    [ { $match : { author : \"dave\" } } ]);"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/aggregation/match/#mongodb-pipeline-pipe.-match",
        "description": "",
        "code": "db.articles.aggregate( [  { $match: { $or: [ { score: { $gt: 70, $lt: 90 } }, { views: { $gte: 1000 } } ] } },  { $group: { _id: null, count: { $sum: 1 } } }] );"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/ https:/www.mongodb.com/products",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#what-is-mongodb-",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#work-with-your-data-in-mongodb",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#deploy-mongodb",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#connect-to-your-deployment",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongosh \"mongodb+srv://cluster0.example.mongodb.net myFirstDatabase\" --apiVersion 1 --username myDatabaseUser"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/?retryWrites=true&w=majority"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/?retryWrites=true&w=majority"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/?retryWrites=true&w=majority"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/?retryWrites=true&w=majority"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/?retryWrites=true&w=majority"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/?retryWrites=true&w=majority"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/?retryWrites=true&w=majority"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@cluster0.example.mongodb.net/?retryWrites=true&w=majority"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-find-connection-string",
        "description": "",
        "code": "Record                            TTL   Class    Priority Weight Port  Target_mongodb._tcp.server.example.com. 86400 IN SRV   0        5      27317 mongodb1.example.com._mongodb._tcp.server.example.com. 86400 IN SRV   0        5      27017 mongodb2.example.com."
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#insert--query--update--or-delete-documents",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#model-your-data",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#import-your-data",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#aggregate-your-data",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/aggregation/#std-label-aggregation",
        "description": "",
        "code": "db.orders.aggregate( [   // Stage 1: Filter pizza order documents by pizza size   {      $match: { size: \"medium\" }   },   // Stage 2: Group remaining documents by pizza name and calculate total quantity   {      $group: { _id: \"$name\", totalQuantity: { $sum: \"$quantity\" } }   }] )"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#authenticate-a-client",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#control-access-to-your-database",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#encrypt-your-most-sensitive-data",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#create-a-cluster",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#scale-out-your-database",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    },
    {
        "source_url": "https://www.mongodb.com/docs/manual/reference/operator/query/#go-further-with-mongodb",
        "description": "",
        "code": "test> db.orders.insertMany([   { \"item\" : \"almonds\", \"price\" : 12, \"quantity\" : 2 },   { \"item\" : \"pecans\", \"price\" : 20, \"quantity\" : 1 },])test> db.inventory.insertMany([   { \"sku\" : \"almonds\", \"description\": \"product 1\", \"instock\" : 120 },   { \"sku\" : \"cashews\", \"description\": \"product 3\", \"instock\" : 60 },   { \"sku\" : \"pecans\", \"description\": \"product 4\", \"instock\" : 70 }])test> db.orders.aggregate([   { $match: { price: { $lt: 15 } } },   { $lookup: {         from: \"inventory\",         localField: \"item\",         foreignField: \"sku\",         as: \"inventory_docs\"   } },   { $sort: { price: 1 } },])"
    }
]