{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: BLMPOP 1 2 test1 LEFT COUNT 1\nMeta: command=BLMPOP group=other args=[\"1\", \"2\", \"test1\", \"LEFT\", \"COUNT\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"BLMPOP 1 2 test1 LEFT COUNT 1\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: BRPOP test1 test2 1\nMeta: command=BRPOP group=other args=[\"test1\", \"test2\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"BRPOP test1 test2 1\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: BZMPOP 1 1 test MIN\nMeta: command=BZMPOP group=other args=[\"1\", \"1\", \"test\", \"MIN\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"BZMPOP 1 1 test MIN\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: COPY test1 test2 DB 1 REPLACE\nMeta: command=COPY group=other args=[\"test1\", \"test2\", \"DB\", \"1\", \"REPLACE\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"COPY test1 test2 DB 1 REPLACE\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: DECRBY test 1\nMeta: command=DECRBY group=string args=[\"test\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"GET test\", \"category\": \"probe\", \"oracle\": \"value_read\"}, {\"cmd\": \"STRLEN test\", \"category\": \"probe\", \"oracle\": \"length_consistent\"}, {\"cmd\": \"GETRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"value_full_range\"}, {\"cmd\": \"SET test NEWVAL\", \"category\": \"value_transform\", \"oracle\": \"mutable_change\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: DEL test1 test2\nMeta: command=DEL group=other args=[\"test1\", \"test2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"DEL test1 test2\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: EXISTS test\nMeta: command=EXISTS group=other args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"EXISTS test\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: EXPIREAT test 1 NX\nMeta: command=EXPIREAT group=ttl args=[\"test\", \"1\", \"NX\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"TTL test\", \"category\": \"probe\", \"oracle\": \"ttl_state\"}, {\"cmd\": \"EXPIRE test 60\", \"category\": \"expire_variant\", \"oracle\": \"ttl_set\"}, {\"cmd\": \"PERSIST test\", \"category\": \"inverse\", \"oracle\": \"ttl_removed\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: GET test\nMeta: command=GET group=string args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"GET test\", \"category\": \"probe\", \"oracle\": \"value_read\"}, {\"cmd\": \"STRLEN test\", \"category\": \"probe\", \"oracle\": \"length_consistent\"}, {\"cmd\": \"GETRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"value_full_range\"}, {\"cmd\": \"SET test NEWVAL\", \"category\": \"value_transform\", \"oracle\": \"mutable_change\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: GETSET test test\nMeta: command=GETSET group=string args=[\"test\", \"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"GET test\", \"category\": \"probe\", \"oracle\": \"value_read\"}, {\"cmd\": \"STRLEN test\", \"category\": \"probe\", \"oracle\": \"length_consistent\"}, {\"cmd\": \"GETRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"value_full_range\"}, {\"cmd\": \"SET test NEWVAL\", \"category\": \"value_transform\", \"oracle\": \"mutable_change\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: HDEL test key1\nMeta: command=HDEL group=hash args=[\"test\", \"key1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"HGET test key1\", \"category\": \"probe\", \"oracle\": \"same_field\"}, {\"cmd\": \"HEXISTS test key1\", \"category\": \"probe\", \"oracle\": \"membership_true\"}, {\"cmd\": \"HSET test key1 v\", \"category\": \"idempotent_repeat\", \"oracle\": \"same_field\"}, {\"cmd\": \"HDEL test key1\", \"category\": \"inverse\", \"oracle\": \"post_condition_empty\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: HEXISTS test key1\nMeta: command=HEXISTS group=hash args=[\"test\", \"key1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"HGET test key1\", \"category\": \"probe\", \"oracle\": \"same_field\"}, {\"cmd\": \"HEXISTS test key1\", \"category\": \"probe\", \"oracle\": \"membership_true\"}, {\"cmd\": \"HSET test key1 v\", \"category\": \"idempotent_repeat\", \"oracle\": \"same_field\"}, {\"cmd\": \"HDEL test key1\", \"category\": \"inverse\", \"oracle\": \"post_condition_empty\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: HEXPIREAT test 1 FIELDS 1 key1\nMeta: command=HEXPIREAT group=other args=[\"test\", \"1\", \"FIELDS\", \"1\", \"key1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"HEXPIREAT test 1 FIELDS 1 key1\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: HGET test key1\nMeta: command=HGET group=hash args=[\"test\", \"key1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"HGET test key1\", \"category\": \"probe\", \"oracle\": \"same_field\"}, {\"cmd\": \"HEXISTS test key1\", \"category\": \"probe\", \"oracle\": \"membership_true\"}, {\"cmd\": \"HSET test key1 v\", \"category\": \"idempotent_repeat\", \"oracle\": \"same_field\"}, {\"cmd\": \"HDEL test key1\", \"category\": \"inverse\", \"oracle\": \"post_condition_empty\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: HKEYS test\nMeta: command=HKEYS group=hash args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"HGET test f\", \"category\": \"probe\", \"oracle\": \"same_field\"}, {\"cmd\": \"HEXISTS test f\", \"category\": \"probe\", \"oracle\": \"membership_true\"}, {\"cmd\": \"HSET test f v\", \"category\": \"idempotent_repeat\", \"oracle\": \"same_field\"}, {\"cmd\": \"HDEL test f\", \"category\": \"inverse\", \"oracle\": \"post_condition_empty\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: HLEN test\nMeta: command=HLEN group=hash args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"HGET test f\", \"category\": \"probe\", \"oracle\": \"same_field\"}, {\"cmd\": \"HEXISTS test f\", \"category\": \"probe\", \"oracle\": \"membership_true\"}, {\"cmd\": \"HSET test f v\", \"category\": \"idempotent_repeat\", \"oracle\": \"same_field\"}, {\"cmd\": \"HDEL test f\", \"category\": \"inverse\", \"oracle\": \"post_condition_empty\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: HRANDFIELD test 1 WITHVALUES\nMeta: command=HRANDFIELD group=hash args=[\"test\", \"1\", \"WITHVALUES\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"HGET test 1\", \"category\": \"probe\", \"oracle\": \"same_field\"}, {\"cmd\": \"HEXISTS test 1\", \"category\": \"probe\", \"oracle\": \"membership_true\"}, {\"cmd\": \"HSET test 1 WITHVALUES\", \"category\": \"idempotent_repeat\", \"oracle\": \"same_field\"}, {\"cmd\": \"HDEL test 1\", \"category\": \"inverse\", \"oracle\": \"post_condition_empty\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: HSCAN test 0 MATCH * COUNT 1\nMeta: command=HSCAN group=hash args=[\"test\", \"0\", \"MATCH\", \"*\", \"COUNT\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"HGET test 0\", \"category\": \"probe\", \"oracle\": \"same_field\"}, {\"cmd\": \"HEXISTS test 0\", \"category\": \"probe\", \"oracle\": \"membership_true\"}, {\"cmd\": \"HSET test 0 MATCH\", \"category\": \"idempotent_repeat\", \"oracle\": \"same_field\"}, {\"cmd\": \"HDEL test 0\", \"category\": \"inverse\", \"oracle\": \"post_condition_empty\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: HSET test key1 val1\nMeta: command=HSET group=hash args=[\"test\", \"key1\", \"val1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"HGET test key1\", \"category\": \"probe\", \"oracle\": \"same_field\"}, {\"cmd\": \"HEXISTS test key1\", \"category\": \"probe\", \"oracle\": \"membership_true\"}, {\"cmd\": \"HSET test key1 val1\", \"category\": \"idempotent_repeat\", \"oracle\": \"same_field\"}, {\"cmd\": \"HDEL test key1\", \"category\": \"inverse\", \"oracle\": \"post_condition_empty\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: INCR test\nMeta: command=INCR group=string args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"GET test\", \"category\": \"probe\", \"oracle\": \"value_read\"}, {\"cmd\": \"STRLEN test\", \"category\": \"probe\", \"oracle\": \"length_consistent\"}, {\"cmd\": \"GETRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"value_full_range\"}, {\"cmd\": \"SET test NEWVAL\", \"category\": \"value_transform\", \"oracle\": \"mutable_change\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: LINDEX test 1\nMeta: command=LINDEX group=list args=[\"test\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"LLEN test\", \"category\": \"probe\", \"oracle\": \"length_probe\"}, {\"cmd\": \"LRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"range_full\"}, {\"cmd\": \"LPUSH test X_MUT\", \"category\": \"idempotent_extend\", \"oracle\": \"length_plus_one\"}, {\"cmd\": \"LPOP test\", \"category\": \"inverse\", \"oracle\": \"length_minus_one\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: LINSERT test BEFORE key1 key2\nMeta: command=LINSERT group=list args=[\"test\", \"BEFORE\", \"key1\", \"key2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"LLEN test\", \"category\": \"probe\", \"oracle\": \"length_probe\"}, {\"cmd\": \"LRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"range_full\"}, {\"cmd\": \"LPUSH test X_MUT\", \"category\": \"idempotent_extend\", \"oracle\": \"length_plus_one\"}, {\"cmd\": \"LPOP test\", \"category\": \"inverse\", \"oracle\": \"length_minus_one\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: LMOVE test1 test2 LEFT RIGHT\nMeta: command=LMOVE group=list args=[\"test1\", \"test2\", \"LEFT\", \"RIGHT\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"LLEN test1\", \"category\": \"probe\", \"oracle\": \"length_probe\"}, {\"cmd\": \"LRANGE test1 0 -1\", \"category\": \"probe\", \"oracle\": \"range_full\"}, {\"cmd\": \"LPUSH test1 X_MUT\", \"category\": \"idempotent_extend\", \"oracle\": \"length_plus_one\"}, {\"cmd\": \"LPOP test1\", \"category\": \"inverse\", \"oracle\": \"length_minus_one\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: LPOS test key RANK 1\nMeta: command=LPOS group=list args=[\"test\", \"key\", \"RANK\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"LLEN test\", \"category\": \"probe\", \"oracle\": \"length_probe\"}, {\"cmd\": \"LRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"range_full\"}, {\"cmd\": \"LPUSH test X_MUT\", \"category\": \"idempotent_extend\", \"oracle\": \"length_plus_one\"}, {\"cmd\": \"LPOP test\", \"category\": \"inverse\", \"oracle\": \"length_minus_one\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: LPUSH test key\nMeta: command=LPUSH group=list args=[\"test\", \"key\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"LLEN test\", \"category\": \"probe\", \"oracle\": \"length_probe\"}, {\"cmd\": \"LRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"range_full\"}, {\"cmd\": \"LPUSH test X_MUT\", \"category\": \"idempotent_extend\", \"oracle\": \"length_plus_one\"}, {\"cmd\": \"LPOP test\", \"category\": \"inverse\", \"oracle\": \"length_minus_one\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: LRANGE test -1 1\nMeta: command=LRANGE group=list args=[\"test\", \"-1\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"LLEN test\", \"category\": \"probe\", \"oracle\": \"length_probe\"}, {\"cmd\": \"LRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"range_full\"}, {\"cmd\": \"LPUSH test X_MUT\", \"category\": \"idempotent_extend\", \"oracle\": \"length_plus_one\"}, {\"cmd\": \"LPOP test\", \"category\": \"inverse\", \"oracle\": \"length_minus_one\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: LREM test -1 key\nMeta: command=LREM group=list args=[\"test\", \"-1\", \"key\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"LLEN test\", \"category\": \"probe\", \"oracle\": \"length_probe\"}, {\"cmd\": \"LRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"range_full\"}, {\"cmd\": \"LPUSH test X_MUT\", \"category\": \"idempotent_extend\", \"oracle\": \"length_plus_one\"}, {\"cmd\": \"LPOP test\", \"category\": \"inverse\", \"oracle\": \"length_minus_one\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: LSET test -1 key\nMeta: command=LSET group=list args=[\"test\", \"-1\", \"key\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"LLEN test\", \"category\": \"probe\", \"oracle\": \"length_probe\"}, {\"cmd\": \"LRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"range_full\"}, {\"cmd\": \"LPUSH test X_MUT\", \"category\": \"idempotent_extend\", \"oracle\": \"length_plus_one\"}, {\"cmd\": \"LPOP test\", \"category\": \"inverse\", \"oracle\": \"length_minus_one\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: MGET test1 test2\nMeta: command=MGET group=other args=[\"test1\", \"test2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"MGET test1 test2\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: MOVE test 1\nMeta: command=MOVE group=other args=[\"test\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"MOVE test 1\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: MSET test1 test2\nMeta: command=MSET group=other args=[\"test1\", \"test2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"MSET test1 test2\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: PERSIST test\nMeta: command=PERSIST group=ttl args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"TTL test\", \"category\": \"probe\", \"oracle\": \"ttl_state\"}, {\"cmd\": \"EXPIRE test 60\", \"category\": \"expire_variant\", \"oracle\": \"ttl_set\"}, {\"cmd\": \"PERSIST test\", \"category\": \"inverse\", \"oracle\": \"ttl_removed\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: PEXPIRETIME test\nMeta: command=PEXPIRETIME group=other args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"PEXPIRETIME test\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: PSETEX test 1 test\nMeta: command=PSETEX group=string args=[\"test\", \"1\", \"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"GET test\", \"category\": \"probe\", \"oracle\": \"value_read\"}, {\"cmd\": \"STRLEN test\", \"category\": \"probe\", \"oracle\": \"length_consistent\"}, {\"cmd\": \"GETRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"value_full_range\"}, {\"cmd\": \"SET test NEWVAL\", \"category\": \"value_transform\", \"oracle\": \"mutable_change\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: RENAME test1 test2\nMeta: command=RENAME group=other args=[\"test1\", \"test2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"RENAME test1 test2\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SADD test key1 key2\nMeta: command=SADD group=set args=[\"test\", \"key1\", \"key2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"SADD test member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"SISMEMBER test member_mut\", \"category\": \"probe\", \"oracle\": \"membership_false_or_true\"}, {\"cmd\": \"SREM test member_mut\", \"category\": \"inverse\", \"oracle\": \"cardinality_minus_one_or_zero\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SCAN 0 MATCH * COUNT 1 TYPE string\nMeta: command=SCAN group=other args=[\"0\", \"MATCH\", \"*\", \"COUNT\", \"1\", \"TYPE\", \"string\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCAN 0 MATCH * COUNT 1 TYPE string\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SCARD test\nMeta: command=SCARD group=set args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"SADD test member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"SISMEMBER test member_mut\", \"category\": \"probe\", \"oracle\": \"membership_false_or_true\"}, {\"cmd\": \"SREM test member_mut\", \"category\": \"inverse\", \"oracle\": \"cardinality_minus_one_or_zero\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SDIFF test\nMeta: command=SDIFF group=set args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"SADD test member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"SISMEMBER test member_mut\", \"category\": \"probe\", \"oracle\": \"membership_false_or_true\"}, {\"cmd\": \"SREM test member_mut\", \"category\": \"inverse\", \"oracle\": \"cardinality_minus_one_or_zero\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SET test test PXAT 123\nMeta: command=SET group=string args=[\"test\", \"test\", \"PXAT\", \"123\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"GET test\", \"category\": \"probe\", \"oracle\": \"value_read\"}, {\"cmd\": \"STRLEN test\", \"category\": \"probe\", \"oracle\": \"length_consistent\"}, {\"cmd\": \"GETRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"value_full_range\"}, {\"cmd\": \"SET test NEWVAL\", \"category\": \"value_transform\", \"oracle\": \"mutable_change\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SETRANGE test 1 test\nMeta: command=SETRANGE group=string args=[\"test\", \"1\", \"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"GET test\", \"category\": \"probe\", \"oracle\": \"value_read\"}, {\"cmd\": \"STRLEN test\", \"category\": \"probe\", \"oracle\": \"length_consistent\"}, {\"cmd\": \"GETRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"value_full_range\"}, {\"cmd\": \"SET test NEWVAL\", \"category\": \"value_transform\", \"oracle\": \"mutable_change\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SINTER test1 test2 test3\nMeta: command=SINTER group=set args=[\"test1\", \"test2\", \"test3\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCARD test1\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"SADD test1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"SISMEMBER test1 member_mut\", \"category\": \"probe\", \"oracle\": \"membership_false_or_true\"}, {\"cmd\": \"SREM test1 member_mut\", \"category\": \"inverse\", \"oracle\": \"cardinality_minus_one_or_zero\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SISMEMBER test key\nMeta: command=SISMEMBER group=set args=[\"test\", \"key\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"SADD test member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"SISMEMBER test member_mut\", \"category\": \"probe\", \"oracle\": \"membership_false_or_true\"}, {\"cmd\": \"SREM test member_mut\", \"category\": \"inverse\", \"oracle\": \"cardinality_minus_one_or_zero\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SMOVE test1 test2\nMeta: command=SMOVE group=other args=[\"test1\", \"test2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SMOVE test1 test2\", \"category\": \"echo\", \"oracle\": \"noop\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SPOP test\nMeta: command=SPOP group=set args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"SADD test member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"SISMEMBER test member_mut\", \"category\": \"probe\", \"oracle\": \"membership_false_or_true\"}, {\"cmd\": \"SREM test member_mut\", \"category\": \"inverse\", \"oracle\": \"cardinality_minus_one_or_zero\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SRANDMEMBER test 1\nMeta: command=SRANDMEMBER group=set args=[\"test\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"SADD test member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"SISMEMBER test member_mut\", \"category\": \"probe\", \"oracle\": \"membership_false_or_true\"}, {\"cmd\": \"SREM test member_mut\", \"category\": \"inverse\", \"oracle\": \"cardinality_minus_one_or_zero\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SREM test 1\nMeta: command=SREM group=set args=[\"test\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"SADD test member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"SISMEMBER test member_mut\", \"category\": \"probe\", \"oracle\": \"membership_false_or_true\"}, {\"cmd\": \"SREM test member_mut\", \"category\": \"inverse\", \"oracle\": \"cardinality_minus_one_or_zero\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SSCAN test 0 MATCH * COUNT 1\nMeta: command=SSCAN group=set args=[\"test\", \"0\", \"MATCH\", \"*\", \"COUNT\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"SCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"SADD test member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"SISMEMBER test member_mut\", \"category\": \"probe\", \"oracle\": \"membership_false_or_true\"}, {\"cmd\": \"SREM test member_mut\", \"category\": \"inverse\", \"oracle\": \"cardinality_minus_one_or_zero\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: SUBSTR test -1 -3\nMeta: command=SUBSTR group=string args=[\"test\", \"-1\", \"-3\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"GET test\", \"category\": \"probe\", \"oracle\": \"value_read\"}, {\"cmd\": \"STRLEN test\", \"category\": \"probe\", \"oracle\": \"length_consistent\"}, {\"cmd\": \"GETRANGE test 0 -1\", \"category\": \"probe\", \"oracle\": \"value_full_range\"}, {\"cmd\": \"SET test NEWVAL\", \"category\": \"value_transform\", \"oracle\": \"mutable_change\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: TTL test\nMeta: command=TTL group=ttl args=[\"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"TTL test\", \"category\": \"probe\", \"oracle\": \"ttl_state\"}, {\"cmd\": \"EXPIRE test 60\", \"category\": \"expire_variant\", \"oracle\": \"ttl_set\"}, {\"cmd\": \"PERSIST test\", \"category\": \"inverse\", \"oracle\": \"ttl_removed\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: ZADD test 1 key1\nMeta: command=ZADD group=zset args=[\"test\", \"1\", \"key1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"ZCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"ZADD test 1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"ZRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent\"}, {\"cmd\": \"ZREVRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent_reverse\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: ZCOUNT test -1 1\nMeta: command=ZCOUNT group=zset args=[\"test\", \"-1\", \"1\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"ZCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"ZADD test 1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"ZRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent\"}, {\"cmd\": \"ZREVRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent_reverse\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: ZDIFF 1 test1 test2\nMeta: command=ZDIFF group=zset args=[\"1\", \"test1\", \"test2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"ZCARD 1\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"ZADD 1 1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"ZRANGE 1 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent\"}, {\"cmd\": \"ZREVRANGE 1 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent_reverse\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: ZINCRBY test 1 key\nMeta: command=ZINCRBY group=zset args=[\"test\", \"1\", \"key\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"ZCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"ZADD test 1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"ZRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent\"}, {\"cmd\": \"ZREVRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent_reverse\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: ZINTER 1 test\nMeta: command=ZINTER group=zset args=[\"1\", \"test\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"ZCARD 1\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"ZADD 1 1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"ZRANGE 1 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent\"}, {\"cmd\": \"ZREVRANGE 1 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent_reverse\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: ZLEXCOUNT test lex1 lex2\nMeta: command=ZLEXCOUNT group=zset args=[\"test\", \"lex1\", \"lex2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"ZCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"ZADD test 1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"ZRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent\"}, {\"cmd\": \"ZREVRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent_reverse\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: ZRANDMEMBER test 1 WITHSCORES\nMeta: command=ZRANDMEMBER group=zset args=[\"test\", \"1\", \"WITHSCORES\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"ZCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"ZADD test 1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"ZRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent\"}, {\"cmd\": \"ZREVRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent_reverse\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: ZRANGE test lex1 lex2\nMeta: command=ZRANGE group=zset args=[\"test\", \"lex1\", \"lex2\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"ZCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"ZADD test 1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"ZRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent\"}, {\"cmd\": \"ZREVRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent_reverse\"}]}"}]}
{"messages": [{"role": "system", "content": "You are a Redis mutation synthesis assistant. Given one seed Redis command, you must output a compact JSON with key 'mutations'. Each mutation has: cmd, category, oracle. Rules: (1) Do NOT change the key name; (2) Avoid introducing unrelated keys; (3) Keep list/set/zset semantics logical; (4) Provide at most 4 high-signal mutations; (5) No extra text besides JSON."}, {"role": "user", "content": "Original: ZREM test member\nMeta: command=ZREM group=zset args=[\"test\", \"member\"]\nTask: Generate up to 4 mutations preserving semantics and return ONLY JSON."}, {"role": "assistant", "content": "{\"mutations\": [{\"cmd\": \"ZCARD test\", \"category\": \"probe\", \"oracle\": \"cardinality_probe\"}, {\"cmd\": \"ZADD test 1 member_mut\", \"category\": \"idempotent_extend\", \"oracle\": \"cardinality_plus_one_or_same\"}, {\"cmd\": \"ZRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent\"}, {\"cmd\": \"ZREVRANGE test 0 -1 WITHSCORES\", \"category\": \"probe\", \"oracle\": \"ordering_consistent_reverse\"}]}"}]}
